[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.1.1","content-config-digest","9a95ec2e8398aaca","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://smartboot.tech/\",\"compressHTML\":true,\"base\":\"/feat/\",\"trailingSlash\":\"always\",\"output\":\"static\",\"scopedStyleStrategy\":\"where\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image/\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"css-variables\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,null],\"rehypePlugins\":[null,null,null,null,[null,{\"themes\":[{\"name\":\"Night Owl No Italics\",\"type\":\"dark\",\"colors\":{\"focusBorder\":\"#122d42\",\"foreground\":\"#d6deeb\",\"disabledForeground\":\"#cccccc80\",\"descriptionForeground\":\"#d6deebb3\",\"errorForeground\":\"#ef5350\",\"icon.foreground\":\"#c5c5c5\",\"contrastActiveBorder\":null,\"contrastBorder\":\"#122d42\",\"textBlockQuote.background\":\"#7f7f7f1a\",\"textBlockQuote.border\":\"#007acc80\",\"textCodeBlock.background\":\"#4f4f4f\",\"textLink.activeForeground\":\"#3794ff\",\"textLink.foreground\":\"#3794ff\",\"textPreformat.foreground\":\"#d7ba7d\",\"textSeparator.foreground\":\"#ffffff2e\",\"editor.background\":\"#011627\",\"editor.foreground\":\"#d6deeb\",\"editorLineNumber.foreground\":\"#4b6479\",\"editorLineNumber.activeForeground\":\"#c5e4fd\",\"editorActiveLineNumber.foreground\":\"#c6c6c6\",\"editor.selectionBackground\":\"#1d3b53\",\"editor.inactiveSelectionBackground\":\"#7e57c25a\",\"editor.selectionHighlightBackground\":\"#5f7e9779\",\"editorError.foreground\":\"#ef5350\",\"editorWarning.foreground\":\"#b39554\",\"editorInfo.foreground\":\"#3794ff\",\"editorHint.foreground\":\"#eeeeeeb2\",\"problemsErrorIcon.foreground\":\"#ef5350\",\"problemsWarningIcon.foreground\":\"#b39554\",\"problemsInfoIcon.foreground\":\"#3794ff\",\"editor.findMatchBackground\":\"#5f7e9779\",\"editor.findMatchHighlightBackground\":\"#1085bb5d\",\"editor.findRangeHighlightBackground\":\"#3a3d4166\",\"editorLink.activeForeground\":\"#4e94ce\",\"editorLightBulb.foreground\":\"#ffcc00\",\"editorLightBulbAutoFix.foreground\":\"#75beff\",\"diffEditor.insertedTextBackground\":\"#99b76d23\",\"diffEditor.insertedTextBorder\":\"#c5e47833\",\"diffEditor.removedTextBackground\":\"#ef535033\",\"diffEditor.removedTextBorder\":\"#ef53504d\",\"diffEditor.insertedLineBackground\":\"#9bb95533\",\"diffEditor.removedLineBackground\":\"#ff000033\",\"editorStickyScroll.background\":\"#011627\",\"editorStickyScrollHover.background\":\"#2a2d2e\",\"editorInlayHint.background\":\"#5f7e97cc\",\"editorInlayHint.foreground\":\"#ffffff\",\"editorInlayHint.typeBackground\":\"#5f7e97cc\",\"editorInlayHint.typeForeground\":\"#ffffff\",\"editorInlayHint.parameterBackground\":\"#5f7e97cc\",\"editorInlayHint.parameterForeground\":\"#ffffff\",\"editorPane.background\":\"#011627\",\"editorGroup.emptyBackground\":\"#011627\",\"editorGroup.focusedEmptyBorder\":null,\"editorGroupHeader.tabsBackground\":\"var(--sl-color-black)\",\"editorGroupHeader.tabsBorder\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"editorGroupHeader.noTabsBackground\":\"#011627\",\"editorGroupHeader.border\":null,\"editorGroup.border\":\"#011627\",\"editorGroup.dropBackground\":\"#7e57c273\",\"editorGroup.dropIntoPromptForeground\":\"#d6deeb\",\"editorGroup.dropIntoPromptBackground\":\"#021320\",\"editorGroup.dropIntoPromptBorder\":null,\"sideBySideEditor.horizontalBorder\":\"#011627\",\"sideBySideEditor.verticalBorder\":\"#011627\",\"scrollbar.shadow\":\"#010b14\",\"scrollbarSlider.background\":\"#ffffff17\",\"scrollbarSlider.hoverBackground\":\"#ffffff40\",\"scrollbarSlider.activeBackground\":\"#084d8180\",\"panel.background\":\"#011627\",\"panel.border\":\"#5f7e97\",\"panelTitle.activeBorder\":\"#5f7e97\",\"panelTitle.activeForeground\":\"#ffffffcc\",\"panelTitle.inactiveForeground\":\"#d6deeb80\",\"panelSectionHeader.background\":\"#80808051\",\"terminal.background\":\"#011627\",\"widget.shadow\":\"#011627\",\"editorWidget.background\":\"#021320\",\"editorWidget.foreground\":\"#d6deeb\",\"editorWidget.border\":\"#5f7e97\",\"quickInput.background\":\"#021320\",\"quickInput.foreground\":\"#d6deeb\",\"quickInputTitle.background\":\"#ffffff1a\",\"pickerGroup.foreground\":\"#d1aaff\",\"pickerGroup.border\":\"#011627\",\"editor.hoverHighlightBackground\":\"#7e57c25a\",\"editorHoverWidget.background\":\"#011627\",\"editorHoverWidget.foreground\":\"#d6deeb\",\"editorHoverWidget.border\":\"#5f7e97\",\"editorHoverWidget.statusBarBackground\":\"#011a2f\",\"titleBar.activeBackground\":\"var(--sl-color-black)\",\"titleBar.activeForeground\":\"var(--sl-color-text)\",\"titleBar.inactiveBackground\":\"#010e1a\",\"titleBar.inactiveForeground\":\"#eeefff99\",\"titleBar.border\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"toolbar.hoverBackground\":\"#5a5d5e50\",\"toolbar.activeBackground\":\"#63666750\",\"tab.activeBackground\":\"#0b2942\",\"tab.unfocusedActiveBackground\":\"#0b2942\",\"tab.inactiveBackground\":\"#01111d\",\"tab.unfocusedInactiveBackground\":\"#01111d\",\"tab.activeForeground\":\"var(--sl-color-text)\",\"tab.inactiveForeground\":\"#5f7e97\",\"tab.unfocusedActiveForeground\":\"#5f7e97\",\"tab.unfocusedInactiveForeground\":\"#5f7e97\",\"tab.hoverBackground\":null,\"tab.unfocusedHoverBackground\":null,\"tab.hoverForeground\":null,\"tab.unfocusedHoverForeground\":null,\"tab.border\":\"#272b3b\",\"tab.lastPinnedBorder\":\"#585858\",\"tab.activeBorder\":\"transparent\",\"tab.unfocusedActiveBorder\":\"#262a39\",\"tab.activeBorderTop\":\"var(--sl-color-accent-high)\",\"tab.unfocusedActiveBorderTop\":null,\"tab.hoverBorder\":null,\"tab.unfocusedHoverBorder\":null,\"tab.activeModifiedBorder\":\"#3399cc\",\"tab.inactiveModifiedBorder\":\"#3399cc80\",\"tab.unfocusedActiveModifiedBorder\":\"#3399cc80\",\"tab.unfocusedInactiveModifiedBorder\":\"#3399cc40\",\"badge.background\":\"#5f7e97\",\"badge.foreground\":\"#ffffff\",\"button.background\":\"#7e57c2cc\",\"button.foreground\":\"#ffffffcc\",\"button.border\":\"#122d42\",\"button.separator\":\"#ffffff52\",\"button.hoverBackground\":\"#7e57c2\",\"button.secondaryBackground\":\"#3a3d41\",\"button.secondaryForeground\":\"#ffffff\",\"button.secondaryHoverBackground\":\"#46494e\",\"dropdown.background\":\"#011627\",\"dropdown.foreground\":\"#ffffffcc\",\"dropdown.border\":\"#5f7e97\",\"list.activeSelectionBackground\":\"#234d708c\",\"list.activeSelectionForeground\":\"#ffffff\",\"tree.indentGuidesStroke\":\"#585858\",\"input.background\":\"#0b253a\",\"input.foreground\":\"#ffffffcc\",\"input.placeholderForeground\":\"#5f7e97\",\"inputOption.activeBorder\":\"#ffffffcc\",\"inputOption.hoverBackground\":\"#5a5d5e80\",\"inputOption.activeBackground\":\"#122d4266\",\"inputOption.activeForeground\":\"#ffffff\",\"inputValidation.infoBackground\":\"#00589ef2\",\"inputValidation.infoBorder\":\"#64b5f6\",\"inputValidation.warningBackground\":\"#675700f2\",\"inputValidation.warningBorder\":\"#ffca28\",\"inputValidation.errorBackground\":\"#ab0300f2\",\"inputValidation.errorBorder\":\"#ef5350\",\"keybindingLabel.background\":\"#8080802b\",\"keybindingLabel.foreground\":\"#cccccc\",\"keybindingLabel.border\":\"#33333399\",\"keybindingLabel.bottomBorder\":\"#44444499\",\"menu.foreground\":\"#ffffffcc\",\"menu.background\":\"#011627\",\"menu.selectionForeground\":\"#ffffff\",\"menu.selectionBackground\":\"#234d708c\",\"menu.separatorBackground\":\"#606060\",\"editor.snippetTabstopHighlightBackground\":\"#7c7c74c\",\"editor.snippetFinalTabstopHighlightBorder\":\"#525252\",\"terminal.ansiBlack\":\"#011627\",\"terminal.ansiRed\":\"#ef5350\",\"terminal.ansiGreen\":\"#22da6e\",\"terminal.ansiYellow\":\"#c5e478\",\"terminal.ansiBlue\":\"#82aaff\",\"terminal.ansiMagenta\":\"#c792ea\",\"terminal.ansiCyan\":\"#21c7a8\",\"terminal.ansiWhite\":\"#ffffff\",\"terminal.ansiBrightBlack\":\"#575656\",\"terminal.ansiBrightRed\":\"#ef5350\",\"terminal.ansiBrightGreen\":\"#22da6e\",\"terminal.ansiBrightYellow\":\"#ffeb95\",\"terminal.ansiBrightBlue\":\"#82aaff\",\"terminal.ansiBrightMagenta\":\"#c792ea\",\"terminal.ansiBrightCyan\":\"#7fdbca\",\"terminal.ansiBrightWhite\":\"#ffffff\",\"selection.background\":\"#4373c2\",\"input.border\":\"#5f7e97\",\"punctuation.definition.generic.begin.html\":\"#ef5350f2\",\"progress.background\":\"#7e57c2\",\"breadcrumb.foreground\":\"#a599e9\",\"breadcrumb.focusForeground\":\"#ffffff\",\"breadcrumb.activeSelectionForeground\":\"#ffffff\",\"breadcrumbPicker.background\":\"#001122\",\"list.invalidItemForeground\":\"#975f94\",\"list.dropBackground\":\"#011627\",\"list.focusBackground\":\"#010d18\",\"list.focusForeground\":\"#ffffff\",\"list.highlightForeground\":\"#ffffff\",\"list.hoverBackground\":\"#011627\",\"list.hoverForeground\":\"#ffffff\",\"list.inactiveSelectionBackground\":\"#0e293f\",\"list.inactiveSelectionForeground\":\"#5f7e97\",\"activityBar.background\":\"#011627\",\"activityBar.dropBackground\":\"#5f7e97\",\"activityBar.foreground\":\"#5f7e97\",\"activityBar.border\":\"#011627\",\"activityBarBadge.background\":\"#44596b\",\"activityBarBadge.foreground\":\"#ffffff\",\"sideBar.background\":\"#011627\",\"sideBar.foreground\":\"#89a4bb\",\"sideBar.border\":\"#011627\",\"sideBarTitle.foreground\":\"#5f7e97\",\"sideBarSectionHeader.background\":\"#011627\",\"sideBarSectionHeader.foreground\":\"#5f7e97\",\"editorCursor.foreground\":\"#80a4c2\",\"editor.wordHighlightBackground\":\"#f6bbe533\",\"editor.wordHighlightStrongBackground\":\"#e2a2f433\",\"editor.lineHighlightBackground\":\"#0003\",\"editor.rangeHighlightBackground\":\"#7e57c25a\",\"editorIndentGuide.background\":\"#5e81ce52\",\"editorIndentGuide.activeBackground\":\"#7e97ac\",\"editorRuler.foreground\":\"#5e81ce52\",\"editorCodeLens.foreground\":\"#5e82ceb4\",\"editorBracketMatch.background\":\"#5f7e974d\",\"editorOverviewRuler.currentContentForeground\":\"#7e57c2\",\"editorOverviewRuler.incomingContentForeground\":\"#7e57c2\",\"editorOverviewRuler.commonContentForeground\":\"#7e57c2\",\"editorGutter.background\":\"#011627\",\"editorGutter.modifiedBackground\":\"#e2b93d\",\"editorGutter.addedBackground\":\"#9ccc65\",\"editorGutter.deletedBackground\":\"#ef5350\",\"editorSuggestWidget.background\":\"#2c3043\",\"editorSuggestWidget.border\":\"#2b2f40\",\"editorSuggestWidget.foreground\":\"#d6deeb\",\"editorSuggestWidget.highlightForeground\":\"#ffffff\",\"editorSuggestWidget.selectedBackground\":\"#5f7e97\",\"debugExceptionWidget.background\":\"#011627\",\"debugExceptionWidget.border\":\"#5f7e97\",\"editorMarkerNavigation.background\":\"#0b2942\",\"editorMarkerNavigationError.background\":\"#ef5350\",\"editorMarkerNavigationWarning.background\":\"#ffca28\",\"peekView.border\":\"#5f7e97\",\"peekViewEditor.background\":\"#011627\",\"peekViewEditor.matchHighlightBackground\":\"#7e57c25a\",\"peekViewResult.background\":\"#011627\",\"peekViewResult.fileForeground\":\"#5f7e97\",\"peekViewResult.lineForeground\":\"#5f7e97\",\"peekViewResult.matchHighlightBackground\":\"#ffffffcc\",\"peekViewResult.selectionBackground\":\"#2e3250\",\"peekViewResult.selectionForeground\":\"#5f7e97\",\"peekViewTitle.background\":\"#011627\",\"peekViewTitleDescription.foreground\":\"#697098\",\"peekViewTitleLabel.foreground\":\"#5f7e97\",\"merge.currentHeaderBackground\":\"#5f7e97\",\"merge.incomingHeaderBackground\":\"#7e57c25a\",\"statusBar.background\":\"#011627\",\"statusBar.foreground\":\"#5f7e97\",\"statusBar.border\":\"#262a39\",\"statusBar.debuggingBackground\":\"#202431\",\"statusBar.debuggingBorder\":\"#1f2330\",\"statusBar.noFolderBackground\":\"#011627\",\"statusBar.noFolderBorder\":\"#25293a\",\"statusBarItem.activeBackground\":\"#202431\",\"statusBarItem.hoverBackground\":\"#202431\",\"statusBarItem.prominentBackground\":\"#202431\",\"statusBarItem.prominentHoverBackground\":\"#202431\",\"notifications.background\":\"#01111d\",\"notifications.border\":\"#262a39\",\"notificationCenter.border\":\"#262a39\",\"notificationToast.border\":\"#262a39\",\"notifications.foreground\":\"#ffffffcc\",\"notificationLink.foreground\":\"#80cbc4\",\"extensionButton.prominentForeground\":\"#ffffffcc\",\"extensionButton.prominentBackground\":\"#7e57c2cc\",\"extensionButton.prominentHoverBackground\":\"#7e57c2\",\"terminal.selectionBackground\":\"#1b90dd4d\",\"terminalCursor.background\":\"#234d70\",\"debugToolBar.background\":\"#011627\",\"welcomePage.buttonBackground\":\"#011627\",\"welcomePage.buttonHoverBackground\":\"#011627\",\"walkThrough.embeddedEditorBackground\":\"#011627\",\"gitDecoration.modifiedResourceForeground\":\"#a2bffc\",\"gitDecoration.deletedResourceForeground\":\"#ef535090\",\"gitDecoration.untrackedResourceForeground\":\"#c5e478ff\",\"gitDecoration.ignoredResourceForeground\":\"#395a75\",\"gitDecoration.conflictingResourceForeground\":\"#ffeb95cc\",\"source.elm\":\"#5f7e97\",\"string.quoted.single.js\":\"#ffffff\",\"meta.objectliteral.js\":\"#82aaff\"},\"fg\":\"#d6deeb\",\"bg\":\"#23262f\",\"semanticHighlighting\":false,\"settings\":[{\"name\":\"Changed\",\"scope\":[\"markup.changed\",\"meta.diff.header.git\",\"meta.diff.header.from-file\",\"meta.diff.header.to-file\"],\"settings\":{\"foreground\":\"#a2bffc\"}},{\"name\":\"Deleted\",\"scope\":[\"markup.deleted.diff\"],\"settings\":{\"foreground\":\"#f05b58fe\"}},{\"name\":\"Inserted\",\"scope\":[\"markup.inserted.diff\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Global settings\",\"settings\":{\"background\":\"#011627\",\"foreground\":\"#d6deeb\"}},{\"name\":\"Comment\",\"scope\":[\"comment\"],\"settings\":{\"foreground\":\"#809191\",\"fontStyle\":\"\"}},{\"name\":\"String\",\"scope\":[\"string\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"String Quoted\",\"scope\":[\"string.quoted\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"Support Constant Math\",\"scope\":[\"support.constant.math\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Number\",\"scope\":[\"constant.numeric\",\"constant.character.numeric\"],\"settings\":{\"foreground\":\"#f78c6c\",\"fontStyle\":\"\"}},{\"name\":\"Built-in constant\",\"scope\":[\"constant.language\",\"punctuation.definition.constant\",\"variable.other.constant\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"User-defined constant\",\"scope\":[\"constant.character\",\"constant.other\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Constant Character Escape\",\"scope\":[\"constant.character.escape\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"RegExp String\",\"scope\":[\"string.regexp\",\"string.regexp keyword.other\"],\"settings\":{\"foreground\":\"#5ca7e4\"}},{\"name\":\"Comma in functions\",\"scope\":[\"meta.function punctuation.separator.comma\"],\"settings\":{\"foreground\":\"#7690a6\"}},{\"name\":\"Variable\",\"scope\":[\"variable\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Keyword\",\"scope\":[\"punctuation.accessor\",\"keyword\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Storage\",\"scope\":[\"storage\",\"meta.var.expr\",\"meta.class meta.method.declaration meta.var.expr storage.type.js\",\"storage.type.property.js\",\"storage.type.property.ts\",\"storage.type.property.tsx\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type.function.arrow.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Class name\",\"scope\":[\"entity.name.class\",\"meta.class entity.name.type.class\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Inherited class\",\"scope\":[\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Function name\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Meta Tag\",\"scope\":[\"punctuation.definition.tag\",\"meta.tag\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"HTML Tag names\",\"scope\":[\"entity.name.tag\",\"meta.tag.other.html\",\"meta.tag.other.js\",\"meta.tag.other.tsx\",\"entity.name.tag.tsx\",\"entity.name.tag.js\",\"entity.name.tag\",\"meta.tag.js\",\"meta.tag.tsx\",\"meta.tag.html\"],\"settings\":{\"foreground\":\"#caece6\",\"fontStyle\":\"\"}},{\"name\":\"Tag attribute\",\"scope\":[\"entity.other.attribute-name\"],\"settings\":{\"fontStyle\":\"\",\"foreground\":\"#c5e478\"}},{\"name\":\"Entity Name Tag Custom\",\"scope\":[\"entity.name.tag.custom\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Library (function & constant)\",\"scope\":[\"support.function\",\"support.constant\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Support Constant Property Value meta\",\"scope\":[\"support.constant.meta.property-value\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Library class/type\",\"scope\":[\"support.type\",\"support.class\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Support Variable DOM\",\"scope\":[\"support.variable.dom\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Invalid\",\"scope\":[\"invalid\"],\"settings\":{\"background\":\"#ff2c83\",\"foreground\":\"#ffffff\"}},{\"name\":\"Invalid deprecated\",\"scope\":[\"invalid.deprecated\"],\"settings\":{\"foreground\":\"#ffffff\",\"background\":\"#d3423e\"}},{\"name\":\"Keyword Operator\",\"scope\":[\"keyword.operator\"],\"settings\":{\"foreground\":\"#7fdbca\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Relational\",\"scope\":[\"keyword.operator.relational\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Assignment\",\"scope\":[\"keyword.operator.assignment\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Arithmetic\",\"scope\":[\"keyword.operator.arithmetic\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Bitwise\",\"scope\":[\"keyword.operator.bitwise\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Increment\",\"scope\":[\"keyword.operator.increment\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Ternary\",\"scope\":[\"keyword.operator.ternary\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Double-Slashed Comment\",\"scope\":[\"comment.line.double-slash\"],\"settings\":{\"foreground\":\"#809191\"}},{\"name\":\"Object\",\"scope\":[\"object\"],\"settings\":{\"foreground\":\"#cdebf7\"}},{\"name\":\"Null\",\"scope\":[\"constant.language.null\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"Meta Brace\",\"scope\":[\"meta.brace\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Meta Delimiter Period\",\"scope\":[\"meta.delimiter.period\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Punctuation Definition String\",\"scope\":[\"punctuation.definition.string\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Punctuation Definition String Markdown\",\"scope\":[\"punctuation.definition.string.begin.markdown\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"Boolean\",\"scope\":[\"constant.language.boolean\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"Object Comma\",\"scope\":[\"object.comma\"],\"settings\":{\"foreground\":\"#ffffff\"}},{\"name\":\"Variable Parameter Function\",\"scope\":[\"variable.parameter.function\"],\"settings\":{\"foreground\":\"#7fdbca\",\"fontStyle\":\"\"}},{\"name\":\"Support Type Property Name & entity name tags\",\"scope\":[\"support.type.vendor.property-name\",\"support.constant.vendor.property-value\",\"support.type.property-name\",\"meta.property-list entity.name.tag\"],\"settings\":{\"foreground\":\"#80cbc4\",\"fontStyle\":\"\"}},{\"name\":\"Entity Name tag reference in stylesheets\",\"scope\":[\"meta.property-list entity.name.tag.reference\"],\"settings\":{\"foreground\":\"#57eaf1\"}},{\"name\":\"Constant Other Color RGB Value Punctuation Definition Constant\",\"scope\":[\"constant.other.color.rgb-value punctuation.definition.constant\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Constant Other Color\",\"scope\":[\"constant.other.color\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Keyword Other Unit\",\"scope\":[\"keyword.other.unit\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Meta Selector\",\"scope\":[\"meta.selector\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Entity Other Attribute Name Id\",\"scope\":[\"entity.other.attribute-name.id\"],\"settings\":{\"foreground\":\"#fad430\"}},{\"name\":\"Meta Property Name\",\"scope\":[\"meta.property-name\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Doctypes\",\"scope\":[\"entity.name.tag.doctype\",\"meta.tag.sgml.doctype\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Punctuation Definition Parameters\",\"scope\":[\"punctuation.definition.parameters\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Keyword Control Operator\",\"scope\":[\"keyword.control.operator\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Keyword Operator Logical\",\"scope\":[\"keyword.operator.logical\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Variable Instances\",\"scope\":[\"variable.instance\",\"variable.other.instance\",\"variable.readwrite.instance\",\"variable.other.readwrite.instance\",\"variable.other.property\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Variable Property Other object property\",\"scope\":[\"variable.other.object.property\"],\"settings\":{\"foreground\":\"#faf39f\",\"fontStyle\":\"\"}},{\"name\":\"Variable Property Other object\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Entity Name Function\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#82aaff\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Comparison, returns, imports, and Keyword Operator Ruby\",\"scope\":[\"keyword.control.conditional.js\",\"keyword.operator.comparison\",\"keyword.control.flow.js\",\"keyword.control.flow.ts\",\"keyword.control.flow.tsx\",\"keyword.control.ruby\",\"keyword.control.def.ruby\",\"keyword.control.loop.js\",\"keyword.control.loop.ts\",\"keyword.control.import.js\",\"keyword.control.import.ts\",\"keyword.control.import.tsx\",\"keyword.control.from.js\",\"keyword.control.from.ts\",\"keyword.control.from.tsx\",\"keyword.control.conditional.js\",\"keyword.control.conditional.ts\",\"keyword.control.switch.js\",\"keyword.control.switch.ts\",\"keyword.operator.instanceof.js\",\"keyword.operator.expression.instanceof.ts\",\"keyword.operator.expression.instanceof.tsx\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Support Constant, `new` keyword, Special Method Keyword, `debugger`, other keywords\",\"scope\":[\"support.constant\",\"keyword.other.special-method\",\"keyword.other.new\",\"keyword.other.debugger\",\"keyword.control\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Support Function\",\"scope\":[\"support.function\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Invalid Broken\",\"scope\":[\"invalid.broken\"],\"settings\":{\"foreground\":\"#888e91\",\"background\":\"#F78C6C\"}},{\"name\":\"Invalid Unimplemented\",\"scope\":[\"invalid.unimplemented\"],\"settings\":{\"background\":\"#8BD649\",\"foreground\":\"#ffffff\"}},{\"name\":\"Invalid Illegal\",\"scope\":[\"invalid.illegal\"],\"settings\":{\"foreground\":\"#ffffff\",\"background\":\"#ec5f67\"}},{\"name\":\"Language Variable\",\"scope\":[\"variable.language\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Support Variable Property\",\"scope\":[\"support.variable.property\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Variable Function\",\"scope\":[\"variable.function\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Variable Interpolation\",\"scope\":[\"variable.interpolation\"],\"settings\":{\"foreground\":\"#ec5f67\"}},{\"name\":\"Meta Function Call\",\"scope\":[\"meta.function-call\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Punctuation Section Embedded\",\"scope\":[\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#dd6b68\"}},{\"name\":\"Punctuation Tweaks\",\"scope\":[\"punctuation.terminator.expression\",\"punctuation.definition.arguments\",\"punctuation.definition.array\",\"punctuation.section.array\",\"meta.array\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"More Punctuation Tweaks\",\"scope\":[\"punctuation.definition.list.begin\",\"punctuation.definition.list.end\",\"punctuation.separator.arguments\",\"punctuation.definition.list\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Template Strings\",\"scope\":[\"string.template meta.template.expression\"],\"settings\":{\"foreground\":\"#dd6b68\"}},{\"name\":\"Backtics(``) in Template Strings\",\"scope\":[\"string.template punctuation.definition.string\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Italics\",\"scope\":[\"italic\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"italic\"}},{\"name\":\"Bold\",\"scope\":[\"bold\"],\"settings\":{\"foreground\":\"#c5e478\",\"fontStyle\":\"bold\"}},{\"name\":\"Quote\",\"scope\":[\"quote\"],\"settings\":{\"foreground\":\"#868cac\",\"fontStyle\":\"\"}},{\"name\":\"Raw Code\",\"scope\":[\"raw\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"CoffeScript Variable Assignment\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#31e1eb\"}},{\"name\":\"CoffeScript Parameter Function\",\"scope\":[\"variable.parameter.function.coffee\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"CoffeeScript Assignments\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"C# Readwrite Variables\",\"scope\":[\"variable.other.readwrite.cs\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C# Classes & Storage types\",\"scope\":[\"entity.name.type.class.cs\",\"storage.type.cs\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"C# Namespaces\",\"scope\":[\"entity.name.type.namespace.cs\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"C# Unquoted String Zone\",\"scope\":[\"string.unquoted.preprocessor.message.cs\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C# Region\",\"scope\":[\"punctuation.separator.hash.cs\",\"keyword.preprocessor.region.cs\",\"keyword.preprocessor.endregion.cs\"],\"settings\":{\"foreground\":\"#ffcb8b\",\"fontStyle\":\"bold\"}},{\"name\":\"C# Other Variables\",\"scope\":[\"variable.other.object.cs\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"C# Enum\",\"scope\":[\"entity.name.type.enum.cs\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Dart String\",\"scope\":[\"string.interpolated.single.dart\",\"string.interpolated.double.dart\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Dart Class\",\"scope\":[\"support.class.dart\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Tag names in Stylesheets\",\"scope\":[\"entity.name.tag.css\",\"entity.name.tag.less\",\"entity.name.tag.custom.css\",\"support.constant.property-value.css\"],\"settings\":{\"foreground\":\"#ff6363\",\"fontStyle\":\"\"}},{\"name\":\"Wildcard(*) selector in Stylesheets\",\"scope\":[\"entity.name.tag.wildcard.css\",\"entity.name.tag.wildcard.less\",\"entity.name.tag.wildcard.scss\",\"entity.name.tag.wildcard.sass\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"CSS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Attribute Name for CSS\",\"scope\":[\"meta.attribute-selector.css entity.other.attribute-name.attribute\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Elixir Classes\",\"scope\":[\"source.elixir support.type.elixir\",\"source.elixir meta.module.elixir entity.name.class.elixir\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Elixir Functions\",\"scope\":[\"source.elixir entity.name.function\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir Constants\",\"scope\":[\"source.elixir constant.other.symbol.elixir\",\"source.elixir constant.other.keywords.elixir\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Elixir String Punctuations\",\"scope\":[\"source.elixir punctuation.definition.string\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir\",\"scope\":[\"source.elixir variable.other.readwrite.module.elixir\",\"source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir Binary Punctuations\",\"scope\":[\"source.elixir .punctuation.binary.elixir\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Closure Constant Keyword\",\"scope\":[\"constant.keyword.clojure\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Go Function Calls\",\"scope\":[\"source.go meta.function-call.go\"],\"settings\":{\"foreground\":\"#dddddd\"}},{\"name\":\"Go Keywords\",\"scope\":[\"source.go keyword.package.go\",\"source.go keyword.import.go\",\"source.go keyword.function.go\",\"source.go keyword.type.go\",\"source.go keyword.struct.go\",\"source.go keyword.interface.go\",\"source.go keyword.const.go\",\"source.go keyword.var.go\",\"source.go keyword.map.go\",\"source.go keyword.channel.go\",\"source.go keyword.control.go\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Go Constants e.g. nil, string format (%s, %d, etc.)\",\"scope\":[\"source.go constant.language.go\",\"source.go constant.other.placeholder.go\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"C++ Functions\",\"scope\":[\"entity.name.function.preprocessor.cpp\",\"entity.scope.name.cpp\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"C++ Meta Namespace\",\"scope\":[\"meta.namespace-block.cpp\"],\"settings\":{\"foreground\":\"#e0dec6\"}},{\"name\":\"C++ Language Primitive Storage\",\"scope\":[\"storage.type.language.primitive.cpp\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"C++ Preprocessor Macro\",\"scope\":[\"meta.preprocessor.macro.cpp\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C++ Variable Parameter\",\"scope\":[\"variable.parameter\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Powershell Variables\",\"scope\":[\"variable.other.readwrite.powershell\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Powershell Function\",\"scope\":[\"support.function.powershell\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"ID Attribute Name in HTML\",\"scope\":[\"entity.other.attribute-name.id.html\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"HTML Punctuation Definition Tag\",\"scope\":[\"punctuation.definition.tag.html\"],\"settings\":{\"foreground\":\"#6ae9f0\"}},{\"name\":\"HTML Doctype\",\"scope\":[\"meta.tag.sgml.doctype.html\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Classes\",\"scope\":[\"meta.class entity.name.type.class.js\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"JavaScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.js\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"JavaScript Terminator\",\"scope\":[\"terminator.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Meta Punctuation Definition\",\"scope\":[\"meta.js punctuation.definition.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Entity Names in Code Documentations\",\"scope\":[\"entity.name.type.instance.jsdoc\",\"entity.name.type.instance.phpdoc\"],\"settings\":{\"foreground\":\"#7690a6\"}},{\"name\":\"Other Variables in Code Documentations\",\"scope\":[\"variable.other.jsdoc\",\"variable.other.phpdoc\"],\"settings\":{\"foreground\":\"#78ccf0\"}},{\"name\":\"JavaScript module imports and exports\",\"scope\":[\"variable.other.meta.import.js\",\"meta.import.js variable.other\",\"variable.other.meta.export.js\",\"meta.export.js variable.other\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Variable Parameter Function\",\"scope\":[\"variable.parameter.function.js\"],\"settings\":{\"foreground\":\"#7986e7\"}},{\"name\":\"JavaScript[React] Variable Other Object\",\"scope\":[\"variable.other.object.js\",\"variable.other.object.jsx\",\"variable.object.property.js\",\"variable.object.property.jsx\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Variables\",\"scope\":[\"variable.js\",\"variable.other.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Entity Name Type\",\"scope\":[\"entity.name.type.js\",\"entity.name.type.module.js\"],\"settings\":{\"foreground\":\"#ffcb8b\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Support Classes\",\"scope\":[\"support.class.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JSON Property Names\",\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"JSON Support Constants\",\"scope\":[\"support.constant.json\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"JSON Property values (string)\",\"scope\":[\"meta.structure.dictionary.value.json string.quoted.double\"],\"settings\":{\"foreground\":\"#c789d6\"}},{\"name\":\"Strings in JSON values\",\"scope\":[\"string.quoted.double.json punctuation.definition.string.json\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Specific JSON Property values like null\",\"scope\":[\"meta.structure.dictionary.json meta.structure.dictionary.value constant.language\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"JavaScript Other Variable\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Ruby Variables\",\"scope\":[\"variable.other.ruby\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Ruby Class\",\"scope\":[\"entity.name.type.class.ruby\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"Ruby Hashkeys\",\"scope\":[\"constant.language.symbol.hashkey.ruby\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"LESS Tag names\",\"scope\":[\"entity.name.tag.less\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"LESS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Attribute Name for LESS\",\"scope\":[\"meta.attribute-selector.less entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Markdown Headings\",\"scope\":[\"markup.heading.markdown\",\"markup.heading.setext.1.markdown\",\"markup.heading.setext.2.markdown\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown Italics\",\"scope\":[\"markup.italic.markdown\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"italic\"}},{\"name\":\"Markdown Bold\",\"scope\":[\"markup.bold.markdown\"],\"settings\":{\"foreground\":\"#c5e478\",\"fontStyle\":\"bold\"}},{\"name\":\"Markdown Quote + others\",\"scope\":[\"markup.quote.markdown\"],\"settings\":{\"foreground\":\"#868cac\",\"fontStyle\":\"\"}},{\"name\":\"Markdown Raw Code + others\",\"scope\":[\"markup.inline.raw.markdown\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Markdown Links\",\"scope\":[\"markup.underline.link.markdown\",\"markup.underline.link.image.markdown\"],\"settings\":{\"foreground\":\"#ff869a\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Link Title and Description\",\"scope\":[\"string.other.link.title.markdown\",\"string.other.link.description.markdown\"],\"settings\":{\"foreground\":\"#d6deeb\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Punctuation\",\"scope\":[\"punctuation.definition.string.markdown\",\"punctuation.definition.string.begin.markdown\",\"punctuation.definition.string.end.markdown\",\"meta.link.inline.markdown punctuation.definition.string\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown MetaData Punctuation\",\"scope\":[\"punctuation.definition.metadata.markdown\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Markdown List Punctuation\",\"scope\":[\"beginning.punctuation.definition.list.markdown\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown Inline Raw String\",\"scope\":[\"markup.inline.raw.string.markdown\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"PHP Variables\",\"scope\":[\"variable.other.php\"],\"settings\":{\"foreground\":\"#bec5d4\"}},{\"name\":\"Support Classes in PHP\",\"scope\":[\"support.class.php\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Punctuations in PHP function calls\",\"scope\":[\"meta.function-call.php punctuation\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"PHP Global Variables\",\"scope\":[\"variable.other.global.php\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Declaration Punctuation in PHP Global Variables\",\"scope\":[\"variable.other.global.php punctuation.definition.variable\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Language Constants in Python\",\"scope\":[\"constant.language.python\"],\"settings\":{\"foreground\":\"#ff5874\"}},{\"name\":\"Python Function Parameter and Arguments\",\"scope\":[\"variable.parameter.function.python\",\"meta.function-call.arguments.python\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Python Function Call\",\"scope\":[\"meta.function-call.python\",\"meta.function-call.generic.python\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"Punctuations in Python\",\"scope\":[\"punctuation.python\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Decorator Functions in Python\",\"scope\":[\"entity.name.function.decorator.python\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Python Language Variable\",\"scope\":[\"source.python variable.language.special\"],\"settings\":{\"foreground\":\"#8eace3\"}},{\"name\":\"Python import control keyword\",\"scope\":[\"keyword.control\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"SCSS Variable\",\"scope\":[\"variable.scss\",\"variable.sass\",\"variable.parameter.url.scss\",\"variable.parameter.url.sass\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#bec5d4\"}},{\"name\":\"Attribute Name for SASS\",\"scope\":[\"meta.attribute-selector.scss entity.other.attribute-name.attribute\",\"meta.attribute-selector.sass entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Tag names in SASS\",\"scope\":[\"entity.name.tag.scss\",\"entity.name.tag.sass\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"SASS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.scss\",\"keyword.other.unit.sass\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"TypeScript[React] Variables and Object Properties\",\"scope\":[\"variable.other.readwrite.alias.ts\",\"variable.other.readwrite.alias.tsx\",\"variable.other.readwrite.ts\",\"variable.other.readwrite.tsx\",\"variable.other.object.ts\",\"variable.other.object.tsx\",\"variable.object.property.ts\",\"variable.object.property.tsx\",\"variable.other.ts\",\"variable.other.tsx\",\"variable.tsx\",\"variable.ts\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript[React] Entity Name Types\",\"scope\":[\"entity.name.type.ts\",\"entity.name.type.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript[React] Node Classes\",\"scope\":[\"support.class.node.ts\",\"support.class.node.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"TypeScript[React] Entity Name Types as Parameters\",\"scope\":[\"meta.type.parameters.ts entity.name.type\",\"meta.type.parameters.tsx entity.name.type\"],\"settings\":{\"foreground\":\"#7690a6\"}},{\"name\":\"TypeScript[React] Import/Export Punctuations\",\"scope\":[\"meta.import.ts punctuation.definition.block\",\"meta.import.tsx punctuation.definition.block\",\"meta.export.ts punctuation.definition.block\",\"meta.export.tsx punctuation.definition.block\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.decorator punctuation.decorator.ts\",\"meta.decorator punctuation.decorator.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.tag.js meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"YAML Entity Name Tags\",\"scope\":[\"entity.name.tag.yaml\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"JavaScript Variable Other ReadWrite\",\"scope\":[\"variable.other.readwrite.js\",\"variable.parameter\"],\"settings\":{\"foreground\":\"#d7dbe0\"}},{\"name\":\"Support Class Component\",\"scope\":[\"support.class.component.js\",\"support.class.component.tsx\"],\"settings\":{\"foreground\":\"#f78c6c\",\"fontStyle\":\"\"}},{\"name\":\"Text nested in React tags\",\"scope\":[\"meta.jsx.children\",\"meta.jsx.children.js\",\"meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript Classes\",\"scope\":[\"meta.class entity.name.type.class.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript Entity Name Type\",\"scope\":[\"entity.name.type.tsx\",\"entity.name.type.module.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript Class Variable Keyword\",\"scope\":[\"meta.class.ts meta.var.expr.ts storage.type.ts\",\"meta.class.tsx meta.var.expr.tsx storage.type.tsx\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"TypeScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.ts\",\"meta.method.declaration storage.type.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"normalize font style of certain components\",\"scope\":[\"meta.property-list.css meta.property-value.css variable.other.less\",\"meta.property-list.scss variable.scss\",\"meta.property-list.sass variable.sass\",\"meta.brace\",\"keyword.operator.operator\",\"keyword.operator.or.regexp\",\"keyword.operator.expression.in\",\"keyword.operator.relational\",\"keyword.operator.assignment\",\"keyword.operator.comparison\",\"keyword.operator.type\",\"keyword.operator\",\"keyword\",\"punctuation.definintion.string\",\"punctuation\",\"variable.other.readwrite.js\",\"storage.type\",\"source.css\",\"string.quoted\"],\"settings\":{\"fontStyle\":\"\"}}],\"styleOverrides\":{\"frames\":{\"editorBackground\":\"var(--sl-color-gray-6)\",\"terminalBackground\":\"var(--sl-color-gray-6)\",\"editorActiveTabBackground\":\"var(--sl-color-gray-6)\",\"terminalTitlebarDotsForeground\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"terminalTitlebarDotsOpacity\":\"0.75\",\"inlineButtonForeground\":\"var(--sl-color-text)\",\"frameBoxShadowCssValue\":\"none\"},\"textMarkers\":{\"markBackground\":\"#ffffff17\",\"markBorderColor\":\"#ffffff40\"}}},{\"name\":\"Night Owl Light\",\"type\":\"light\",\"colors\":{\"focusBorder\":\"#93a1a1\",\"foreground\":\"#403f53\",\"disabledForeground\":\"#61616180\",\"descriptionForeground\":\"#403f53\",\"errorForeground\":\"#403f53\",\"icon.foreground\":\"#424242\",\"contrastActiveBorder\":null,\"contrastBorder\":null,\"textBlockQuote.background\":\"#7f7f7f1a\",\"textBlockQuote.border\":\"#007acc80\",\"textCodeBlock.background\":\"#dcdcdc66\",\"textLink.activeForeground\":\"#006ab1\",\"textLink.foreground\":\"#006ab1\",\"textPreformat.foreground\":\"#a31515\",\"textSeparator.foreground\":\"#0000002e\",\"editor.background\":\"#fbfbfb\",\"editor.foreground\":\"#403f53\",\"editorLineNumber.foreground\":\"#90a7b2\",\"editorLineNumber.activeForeground\":\"#403f53\",\"editorActiveLineNumber.foreground\":\"#0b216f\",\"editor.selectionBackground\":\"#e0e0e0\",\"editor.inactiveSelectionBackground\":\"#e0e0e080\",\"editor.selectionHighlightBackground\":\"#339cec33\",\"editorError.foreground\":\"#e64d49\",\"editorWarning.foreground\":\"#daaa01\",\"editorInfo.foreground\":\"#1a85ff\",\"editorHint.foreground\":\"#6c6c6c\",\"problemsErrorIcon.foreground\":\"#e64d49\",\"problemsWarningIcon.foreground\":\"#daaa01\",\"problemsInfoIcon.foreground\":\"#1a85ff\",\"editor.findMatchBackground\":\"#93a1a16c\",\"editor.findMatchHighlightBackground\":\"#93a1a16c\",\"editor.findRangeHighlightBackground\":\"#7497a633\",\"editorLink.activeForeground\":\"#0000ff\",\"editorLightBulb.foreground\":\"#ddb100\",\"editorLightBulbAutoFix.foreground\":\"#007acc\",\"diffEditor.insertedTextBackground\":\"#9ccc2c40\",\"diffEditor.insertedTextBorder\":null,\"diffEditor.removedTextBackground\":\"#ff000033\",\"diffEditor.removedTextBorder\":null,\"diffEditor.insertedLineBackground\":\"#9bb95533\",\"diffEditor.removedLineBackground\":\"#ff000033\",\"editorStickyScroll.background\":\"#fbfbfb\",\"editorStickyScrollHover.background\":\"#f0f0f0\",\"editorInlayHint.background\":\"#2aa29899\",\"editorInlayHint.foreground\":\"#f0f0f0\",\"editorInlayHint.typeBackground\":\"#2aa29899\",\"editorInlayHint.typeForeground\":\"#f0f0f0\",\"editorInlayHint.parameterBackground\":\"#2aa29899\",\"editorInlayHint.parameterForeground\":\"#f0f0f0\",\"editorPane.background\":\"#fbfbfb\",\"editorGroup.emptyBackground\":null,\"editorGroup.focusedEmptyBorder\":null,\"editorGroupHeader.tabsBackground\":\"var(--sl-color-gray-6)\",\"editorGroupHeader.tabsBorder\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"editorGroupHeader.noTabsBackground\":\"#f0f0f0\",\"editorGroupHeader.border\":null,\"editorGroup.border\":\"#f0f0f0\",\"editorGroup.dropBackground\":\"#2677cb2d\",\"editorGroup.dropIntoPromptForeground\":\"#403f53\",\"editorGroup.dropIntoPromptBackground\":\"#f0f0f0\",\"editorGroup.dropIntoPromptBorder\":null,\"sideBySideEditor.horizontalBorder\":\"#f0f0f0\",\"sideBySideEditor.verticalBorder\":\"#f0f0f0\",\"scrollbar.shadow\":\"#cccccc\",\"scrollbarSlider.background\":\"#0000001a\",\"scrollbarSlider.hoverBackground\":\"#00000055\",\"scrollbarSlider.activeBackground\":\"#00000099\",\"panel.background\":\"#f0f0f0\",\"panel.border\":\"#d9d9d9\",\"panelTitle.activeBorder\":\"#424242\",\"panelTitle.activeForeground\":\"#424242\",\"panelTitle.inactiveForeground\":\"#424242bf\",\"panelSectionHeader.background\":\"#80808051\",\"terminal.background\":\"#f6f6f6\",\"widget.shadow\":\"#d9d9d9\",\"editorWidget.background\":\"#f0f0f0\",\"editorWidget.foreground\":\"#403f53\",\"editorWidget.border\":\"#d9d9d9\",\"quickInput.background\":\"#f0f0f0\",\"quickInput.foreground\":\"#403f53\",\"quickInputTitle.background\":\"#0000000f\",\"pickerGroup.foreground\":\"#403f53\",\"pickerGroup.border\":\"#d9d9d9\",\"editor.hoverHighlightBackground\":\"#339cec33\",\"editorHoverWidget.background\":\"#f0f0f0\",\"editorHoverWidget.foreground\":\"#403f53\",\"editorHoverWidget.border\":\"#d9d9d9\",\"editorHoverWidget.statusBarBackground\":\"#e4e4e4\",\"titleBar.activeBackground\":\"var(--sl-color-gray-6)\",\"titleBar.activeForeground\":\"var(--sl-color-text)\",\"titleBar.inactiveBackground\":\"#f0f0f099\",\"titleBar.inactiveForeground\":\"#33333399\",\"titleBar.border\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"toolbar.hoverBackground\":\"#b8b8b850\",\"toolbar.activeBackground\":\"#a6a6a650\",\"tab.activeBackground\":\"#f6f6f6\",\"tab.unfocusedActiveBackground\":\"#f6f6f6\",\"tab.inactiveBackground\":\"#f0f0f0\",\"tab.unfocusedInactiveBackground\":\"#f0f0f0\",\"tab.activeForeground\":\"var(--sl-color-text)\",\"tab.inactiveForeground\":\"#403f53\",\"tab.unfocusedActiveForeground\":\"#403f53b3\",\"tab.unfocusedInactiveForeground\":\"#403f5380\",\"tab.hoverBackground\":null,\"tab.unfocusedHoverBackground\":null,\"tab.hoverForeground\":null,\"tab.unfocusedHoverForeground\":null,\"tab.border\":\"#f0f0f0\",\"tab.lastPinnedBorder\":\"#a9a9a9\",\"tab.activeBorder\":\"transparent\",\"tab.unfocusedActiveBorder\":null,\"tab.activeBorderTop\":\"var(--sl-color-accent)\",\"tab.unfocusedActiveBorderTop\":null,\"tab.hoverBorder\":null,\"tab.unfocusedHoverBorder\":null,\"tab.activeModifiedBorder\":\"#2aa298\",\"tab.inactiveModifiedBorder\":\"#93a1a1\",\"tab.unfocusedActiveModifiedBorder\":\"#93a1a1\",\"tab.unfocusedInactiveModifiedBorder\":\"#93a1a1\",\"badge.background\":\"#2aa298\",\"badge.foreground\":\"#f0f0f0\",\"button.background\":\"#2aa298\",\"button.foreground\":\"#f0f0f0\",\"button.border\":null,\"button.separator\":\"#f0f0f066\",\"button.hoverBackground\":\"#22827a\",\"button.secondaryBackground\":\"#5f6a79\",\"button.secondaryForeground\":\"#ffffff\",\"button.secondaryHoverBackground\":\"#4c5561\",\"dropdown.background\":\"#f0f0f0\",\"dropdown.foreground\":\"#403f53\",\"dropdown.border\":\"#d9d9d9\",\"list.activeSelectionBackground\":\"#d3e8f8\",\"list.activeSelectionForeground\":\"#403f53\",\"tree.indentGuidesStroke\":\"#a9a9a9\",\"input.background\":\"#f0f0f0\",\"input.foreground\":\"#403f53\",\"input.placeholderForeground\":\"#93a1a1\",\"inputOption.activeBorder\":\"#2aa298\",\"inputOption.hoverBackground\":\"#b8b8b850\",\"inputOption.activeBackground\":\"#93a1a133\",\"inputOption.activeForeground\":\"#000000\",\"inputValidation.infoBackground\":\"#f0f0f0\",\"inputValidation.infoBorder\":\"#d0d0d0\",\"inputValidation.warningBackground\":\"#daaa01\",\"inputValidation.warningBorder\":\"#e0af02\",\"inputValidation.errorBackground\":\"#f76e6e\",\"inputValidation.errorBorder\":\"#de3d3b\",\"keybindingLabel.background\":\"#dddddd66\",\"keybindingLabel.foreground\":\"#555555\",\"keybindingLabel.border\":\"#cccccc66\",\"keybindingLabel.bottomBorder\":\"#bbbbbb66\",\"menu.foreground\":\"#403f53\",\"menu.background\":\"#f0f0f0\",\"menu.selectionForeground\":\"#403f53\",\"menu.selectionBackground\":\"#d3e8f8\",\"menu.separatorBackground\":\"#d4d4d4\",\"editor.snippetTabstopHighlightBackground\":\"#0a326433\",\"editor.snippetFinalTabstopHighlightBorder\":\"#0a326480\",\"terminal.ansiBlack\":\"#403f53\",\"terminal.ansiRed\":\"#de3d3b\",\"terminal.ansiGreen\":\"#08916a\",\"terminal.ansiYellow\":\"#e0af02\",\"terminal.ansiBlue\":\"#288ed7\",\"terminal.ansiMagenta\":\"#d6438a\",\"terminal.ansiCyan\":\"#2aa298\",\"terminal.ansiWhite\":\"#f0f0f0\",\"terminal.ansiBrightBlack\":\"#403f53\",\"terminal.ansiBrightRed\":\"#de3d3b\",\"terminal.ansiBrightGreen\":\"#08916a\",\"terminal.ansiBrightYellow\":\"#daaa01\",\"terminal.ansiBrightBlue\":\"#288ed7\",\"terminal.ansiBrightMagenta\":\"#d6438a\",\"terminal.ansiBrightCyan\":\"#2aa298\",\"terminal.ansiBrightWhite\":\"#f0f0f0\",\"selection.background\":\"#7a8181ad\",\"notifications.background\":\"#f0f0f0\",\"notifications.foreground\":\"#403f53\",\"notificationLink.foreground\":\"#994cc3\",\"notifications.border\":\"#cccccc\",\"notificationCenter.border\":\"#cccccc\",\"notificationToast.border\":\"#cccccc\",\"notificationCenterHeader.foreground\":\"#403f53\",\"notificationCenterHeader.background\":\"#f0f0f0\",\"input.border\":\"#d9d9d9\",\"progressBar.background\":\"#2aa298\",\"list.inactiveSelectionBackground\":\"#e0e7ea\",\"list.inactiveSelectionForeground\":\"#403f53\",\"list.focusBackground\":\"#d3e8f8\",\"list.hoverBackground\":\"#d3e8f8\",\"list.focusForeground\":\"#403f53\",\"list.hoverForeground\":\"#403f53\",\"list.highlightForeground\":\"#403f53\",\"list.errorForeground\":\"#e64d49\",\"list.warningForeground\":\"#daaa01\",\"activityBar.background\":\"#f0f0f0\",\"activityBar.foreground\":\"#403f53\",\"activityBar.dropBackground\":\"#d0d0d0\",\"activityBarBadge.background\":\"#403f53\",\"activityBarBadge.foreground\":\"#f0f0f0\",\"activityBar.border\":\"#f0f0f0\",\"sideBar.background\":\"#f0f0f0\",\"sideBar.foreground\":\"#403f53\",\"sideBarTitle.foreground\":\"#403f53\",\"sideBar.border\":\"#f0f0f0\",\"editorGroup.background\":\"#f6f6f6\",\"editorCursor.foreground\":\"#90a7b2\",\"editor.wordHighlightBackground\":\"#339cec33\",\"editor.wordHighlightStrongBackground\":\"#007dd659\",\"editor.lineHighlightBackground\":\"#f0f0f0\",\"editor.rangeHighlightBackground\":\"#7497a633\",\"editorWhitespace.foreground\":\"#d9d9d9\",\"editorIndentGuide.background\":\"#d9d9d9\",\"editorCodeLens.foreground\":\"#403f53\",\"editorBracketMatch.background\":\"#d3e8f8\",\"editorBracketMatch.border\":\"#2aa298\",\"editorError.border\":\"#fbfbfb\",\"editorWarning.border\":\"#daaa01\",\"editorGutter.addedBackground\":\"#49d0c5\",\"editorGutter.modifiedBackground\":\"#6fbef6\",\"editorGutter.deletedBackground\":\"#f76e6e\",\"editorRuler.foreground\":\"#d9d9d9\",\"editorOverviewRuler.errorForeground\":\"#e64d49\",\"editorOverviewRuler.warningForeground\":\"#daaa01\",\"editorSuggestWidget.background\":\"#f0f0f0\",\"editorSuggestWidget.foreground\":\"#403f53\",\"editorSuggestWidget.highlightForeground\":\"#403f53\",\"editorSuggestWidget.selectedBackground\":\"#d3e8f8\",\"editorSuggestWidget.border\":\"#d9d9d9\",\"debugExceptionWidget.background\":\"#f0f0f0\",\"debugExceptionWidget.border\":\"#d9d9d9\",\"editorMarkerNavigation.background\":\"#d0d0d0\",\"editorMarkerNavigationError.background\":\"#f76e6e\",\"editorMarkerNavigationWarning.background\":\"#daaa01\",\"debugToolBar.background\":\"#f0f0f0\",\"extensionButton.prominentBackground\":\"#2aa298\",\"extensionButton.prominentForeground\":\"#f0f0f0\",\"statusBar.background\":\"#f0f0f0\",\"statusBar.border\":\"#f0f0f0\",\"statusBar.debuggingBackground\":\"#f0f0f0\",\"statusBar.debuggingForeground\":\"#403f53\",\"statusBar.foreground\":\"#403f53\",\"statusBar.noFolderBackground\":\"#f0f0f0\",\"statusBar.noFolderForeground\":\"#403f53\",\"peekView.border\":\"#d9d9d9\",\"peekViewEditor.background\":\"#f6f6f6\",\"peekViewEditorGutter.background\":\"#f6f6f6\",\"peekViewEditor.matchHighlightBackground\":\"#49d0c5\",\"peekViewResult.background\":\"#f0f0f0\",\"peekViewResult.fileForeground\":\"#403f53\",\"peekViewResult.lineForeground\":\"#403f53\",\"peekViewResult.matchHighlightBackground\":\"#49d0c5\",\"peekViewResult.selectionBackground\":\"#e0e7ea\",\"peekViewResult.selectionForeground\":\"#403f53\",\"peekViewTitle.background\":\"#f0f0f0\",\"peekViewTitleLabel.foreground\":\"#403f53\",\"peekViewTitleDescription.foreground\":\"#403f53\",\"terminal.foreground\":\"#403f53\"},\"fg\":\"#403f53\",\"bg\":\"#f6f7f9\",\"semanticHighlighting\":false,\"settings\":[{\"name\":\"Changed\",\"scope\":[\"markup.changed\",\"meta.diff.header.git\",\"meta.diff.header.from-file\",\"meta.diff.header.to-file\"],\"settings\":{\"foreground\":\"#576687\"}},{\"name\":\"Deleted\",\"scope\":[\"markup.deleted.diff\"],\"settings\":{\"foreground\":\"#b33e3cfe\"}},{\"name\":\"Inserted\",\"scope\":[\"markup.inserted.diff\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Global settings\",\"settings\":{\"background\":\"#011627\",\"foreground\":\"#403f53\"}},{\"name\":\"Comment\",\"scope\":[\"comment\"],\"settings\":{\"foreground\":\"#616671\"}},{\"name\":\"String\",\"scope\":[\"string\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"String Quoted\",\"scope\":[\"string.quoted\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#9b504e\"}},{\"name\":\"Support Constant Math\",\"scope\":[\"support.constant.math\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Number\",\"scope\":[\"constant.numeric\",\"constant.character.numeric\"],\"settings\":{\"foreground\":\"#aa0982\",\"fontStyle\":\"\"}},{\"name\":\"Built-in constant\",\"scope\":[\"constant.language\",\"punctuation.definition.constant\",\"variable.other.constant\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"User-defined constant\",\"scope\":[\"constant.character\",\"constant.other\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Constant Character Escape\",\"scope\":[\"constant.character.escape\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"RegExp String\",\"scope\":[\"string.regexp\",\"string.regexp keyword.other\"],\"settings\":{\"foreground\":\"#3a6a90\"}},{\"name\":\"Comma in functions\",\"scope\":[\"meta.function punctuation.separator.comma\"],\"settings\":{\"foreground\":\"#4f687d\"}},{\"name\":\"Variable\",\"scope\":[\"variable\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Keyword\",\"scope\":[\"punctuation.accessor\",\"keyword\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Storage\",\"scope\":[\"storage\",\"meta.var.expr\",\"meta.class meta.method.declaration meta.var.expr storage.type.js\",\"storage.type.property.js\",\"storage.type.property.ts\",\"storage.type.property.tsx\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type.function.arrow.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Class name\",\"scope\":[\"entity.name.class\",\"meta.class entity.name.type.class\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Inherited class\",\"scope\":[\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Function name\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Meta Tag\",\"scope\":[\"punctuation.definition.tag\",\"meta.tag\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"HTML Tag names\",\"scope\":[\"entity.name.tag\",\"meta.tag.other.html\",\"meta.tag.other.js\",\"meta.tag.other.tsx\",\"entity.name.tag.tsx\",\"entity.name.tag.js\",\"entity.name.tag\",\"meta.tag.js\",\"meta.tag.tsx\",\"meta.tag.html\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Tag attribute\",\"scope\":[\"entity.other.attribute-name\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Entity Name Tag Custom\",\"scope\":[\"entity.name.tag.custom\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Library (function & constant)\",\"scope\":[\"support.function\",\"support.constant\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Support Constant Property Value meta\",\"scope\":[\"support.constant.meta.property-value\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Library class/type\",\"scope\":[\"support.type\",\"support.class\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Support Variable DOM\",\"scope\":[\"support.variable.dom\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Invalid\",\"scope\":[\"invalid\"],\"settings\":{\"foreground\":\"#bf2162\"}},{\"name\":\"Invalid deprecated\",\"scope\":[\"invalid.deprecated\"],\"settings\":{\"foreground\":\"#b73936\"}},{\"name\":\"Keyword Operator\",\"scope\":[\"keyword.operator\"],\"settings\":{\"foreground\":\"#097174\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Relational\",\"scope\":[\"keyword.operator.relational\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Keyword Operator Assignment\",\"scope\":[\"keyword.operator.assignment\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Keyword Operator Arithmetic\",\"scope\":[\"keyword.operator.arithmetic\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Keyword Operator Bitwise\",\"scope\":[\"keyword.operator.bitwise\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Keyword Operator Increment\",\"scope\":[\"keyword.operator.increment\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Keyword Operator Ternary\",\"scope\":[\"keyword.operator.ternary\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Double-Slashed Comment\",\"scope\":[\"comment.line.double-slash\"],\"settings\":{\"foreground\":\"#5e6578\"}},{\"name\":\"Object\",\"scope\":[\"object\"],\"settings\":{\"foreground\":\"#5a686d\"}},{\"name\":\"Null\",\"scope\":[\"constant.language.null\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"Meta Brace\",\"scope\":[\"meta.brace\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Meta Delimiter Period\",\"scope\":[\"meta.delimiter.period\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Punctuation Definition String\",\"scope\":[\"punctuation.definition.string\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Punctuation Definition String Markdown\",\"scope\":[\"punctuation.definition.string.begin.markdown\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"Boolean\",\"scope\":[\"constant.language.boolean\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"Object Comma\",\"scope\":[\"object.comma\"],\"settings\":{\"foreground\":\"#666666\"}},{\"name\":\"Variable Parameter Function\",\"scope\":[\"variable.parameter.function\"],\"settings\":{\"foreground\":\"#097174\",\"fontStyle\":\"\"}},{\"name\":\"Support Type Property Name & entity name tags\",\"scope\":[\"support.type.vendor.property-name\",\"support.constant.vendor.property-value\",\"support.type.property-name\",\"meta.property-list entity.name.tag\"],\"settings\":{\"foreground\":\"#097174\",\"fontStyle\":\"\"}},{\"name\":\"Entity Name tag reference in stylesheets\",\"scope\":[\"meta.property-list entity.name.tag.reference\"],\"settings\":{\"foreground\":\"#297073\"}},{\"name\":\"Constant Other Color RGB Value Punctuation Definition Constant\",\"scope\":[\"constant.other.color.rgb-value punctuation.definition.constant\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Constant Other Color\",\"scope\":[\"constant.other.color\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Keyword Other Unit\",\"scope\":[\"keyword.other.unit\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Meta Selector\",\"scope\":[\"meta.selector\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Entity Other Attribute Name Id\",\"scope\":[\"entity.other.attribute-name.id\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Meta Property Name\",\"scope\":[\"meta.property-name\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Doctypes\",\"scope\":[\"entity.name.tag.doctype\",\"meta.tag.sgml.doctype\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Punctuation Definition Parameters\",\"scope\":[\"punctuation.definition.parameters\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Keyword Control Operator\",\"scope\":[\"keyword.control.operator\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Keyword Operator Logical\",\"scope\":[\"keyword.operator.logical\"],\"settings\":{\"foreground\":\"#8d46b4\",\"fontStyle\":\"\"}},{\"name\":\"Variable Instances\",\"scope\":[\"variable.instance\",\"variable.other.instance\",\"variable.readwrite.instance\",\"variable.other.readwrite.instance\",\"variable.other.property\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Variable Property Other object property\",\"scope\":[\"variable.other.object.property\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Variable Property Other object\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Entity Name Function\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Keyword Operator Comparison, imports, returns and Keyword Operator Ruby\",\"scope\":[\"keyword.operator.comparison\",\"keyword.control.flow.js\",\"keyword.control.flow.ts\",\"keyword.control.flow.tsx\",\"keyword.control.ruby\",\"keyword.control.module.ruby\",\"keyword.control.class.ruby\",\"keyword.control.def.ruby\",\"keyword.control.loop.js\",\"keyword.control.loop.ts\",\"keyword.control.import.js\",\"keyword.control.import.ts\",\"keyword.control.import.tsx\",\"keyword.control.from.js\",\"keyword.control.from.ts\",\"keyword.control.from.tsx\",\"keyword.operator.instanceof.js\",\"keyword.operator.expression.instanceof.ts\",\"keyword.operator.expression.instanceof.tsx\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Keyword Control Conditional\",\"scope\":[\"keyword.control.conditional.js\",\"keyword.control.conditional.ts\",\"keyword.control.switch.js\",\"keyword.control.switch.ts\"],\"settings\":{\"foreground\":\"#8d46b4\",\"fontStyle\":\"\"}},{\"name\":\"Support Constant, `new` keyword, Special Method Keyword, `debugger`, other keywords\",\"scope\":[\"support.constant\",\"keyword.other.special-method\",\"keyword.other.new\",\"keyword.other.debugger\",\"keyword.control\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Support Function\",\"scope\":[\"support.function\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Invalid Broken\",\"scope\":[\"invalid.broken\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Invalid Unimplemented\",\"scope\":[\"invalid.unimplemented\"],\"settings\":{\"foreground\":\"#497026\"}},{\"name\":\"Invalid Illegal\",\"scope\":[\"invalid.illegal\"],\"settings\":{\"foreground\":\"#9b504e\"}},{\"name\":\"Language Variable\",\"scope\":[\"variable.language\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Support Variable Property\",\"scope\":[\"support.variable.property\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Variable Function\",\"scope\":[\"variable.function\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Variable Interpolation\",\"scope\":[\"variable.interpolation\"],\"settings\":{\"foreground\":\"#aa444a\"}},{\"name\":\"Meta Function Call\",\"scope\":[\"meta.function-call\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Punctuation Section Embedded\",\"scope\":[\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#b73936\"}},{\"name\":\"Punctuation Tweaks\",\"scope\":[\"punctuation.terminator.expression\",\"punctuation.definition.arguments\",\"punctuation.definition.array\",\"punctuation.section.array\",\"meta.array\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"More Punctuation Tweaks\",\"scope\":[\"punctuation.definition.list.begin\",\"punctuation.definition.list.end\",\"punctuation.separator.arguments\",\"punctuation.definition.list\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Template Strings\",\"scope\":[\"string.template meta.template.expression\"],\"settings\":{\"foreground\":\"#b73936\"}},{\"name\":\"Backtics(``) in Template Strings\",\"scope\":[\"string.template punctuation.definition.string\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Italics\",\"scope\":[\"italic\"],\"settings\":{\"foreground\":\"#8d46b4\",\"fontStyle\":\"italic\"}},{\"name\":\"Bold\",\"scope\":[\"bold\"],\"settings\":{\"foreground\":\"#3c63b3\",\"fontStyle\":\"bold\"}},{\"name\":\"Quote\",\"scope\":[\"quote\"],\"settings\":{\"foreground\":\"#5e6487\"}},{\"name\":\"Raw Code\",\"scope\":[\"raw\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"CoffeScript Variable Assignment\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#197176\"}},{\"name\":\"CoffeScript Parameter Function\",\"scope\":[\"variable.parameter.function.coffee\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"CoffeeScript Assignments\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"C# Readwrite Variables\",\"scope\":[\"variable.other.readwrite.cs\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"C# Classes & Storage types\",\"scope\":[\"entity.name.type.class.cs\",\"storage.type.cs\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"C# Namespaces\",\"scope\":[\"entity.name.type.namespace.cs\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Tag names in Stylesheets\",\"scope\":[\"entity.name.tag.css\",\"entity.name.tag.less\",\"entity.name.tag.custom.css\",\"support.constant.property-value.css\"],\"settings\":{\"foreground\":\"#9b504e\",\"fontStyle\":\"\"}},{\"name\":\"Wildcard(*) selector in Stylesheets\",\"scope\":[\"entity.name.tag.wildcard.css\",\"entity.name.tag.wildcard.less\",\"entity.name.tag.wildcard.scss\",\"entity.name.tag.wildcard.sass\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"CSS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Attribute Name for CSS\",\"scope\":[\"meta.attribute-selector.css entity.other.attribute-name.attribute\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Elixir Classes\",\"scope\":[\"source.elixir support.type.elixir\",\"source.elixir meta.module.elixir entity.name.class.elixir\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Elixir Functions\",\"scope\":[\"source.elixir entity.name.function\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Elixir Constants\",\"scope\":[\"source.elixir constant.other.symbol.elixir\",\"source.elixir constant.other.keywords.elixir\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Elixir String Punctuations\",\"scope\":[\"source.elixir punctuation.definition.string\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Elixir\",\"scope\":[\"source.elixir variable.other.readwrite.module.elixir\",\"source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Elixir Binary Punctuations\",\"scope\":[\"source.elixir .punctuation.binary.elixir\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Closure Constant Keyword\",\"scope\":[\"constant.keyword.clojure\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Go Function Calls\",\"scope\":[\"source.go meta.function-call.go\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Go Keywords\",\"scope\":[\"source.go keyword.package.go\",\"source.go keyword.import.go\",\"source.go keyword.function.go\",\"source.go keyword.type.go\",\"source.go keyword.struct.go\",\"source.go keyword.interface.go\",\"source.go keyword.const.go\",\"source.go keyword.var.go\",\"source.go keyword.map.go\",\"source.go keyword.channel.go\",\"source.go keyword.control.go\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"Go Constants e.g. nil, string format (%s, %d, etc.)\",\"scope\":[\"source.go constant.language.go\",\"source.go constant.other.placeholder.go\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"C++ Functions\",\"scope\":[\"entity.name.function.preprocessor.cpp\",\"entity.scope.name.cpp\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"C++ Meta Namespace\",\"scope\":[\"meta.namespace-block.cpp\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"C++ Language Primitive Storage\",\"scope\":[\"storage.type.language.primitive.cpp\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"C++ Preprocessor Macro\",\"scope\":[\"meta.preprocessor.macro.cpp\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"C++ Variable Parameter\",\"scope\":[\"variable.parameter\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Powershell Variables\",\"scope\":[\"variable.other.readwrite.powershell\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Powershell Function\",\"scope\":[\"support.function.powershell\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"ID Attribute Name in HTML\",\"scope\":[\"entity.other.attribute-name.id.html\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"HTML Punctuation Definition Tag\",\"scope\":[\"punctuation.definition.tag.html\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"HTML Doctype\",\"scope\":[\"meta.tag.sgml.doctype.html\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"JavaScript Classes\",\"scope\":[\"meta.class entity.name.type.class.js\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"JavaScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.js\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"JavaScript Terminator\",\"scope\":[\"terminator.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Meta Punctuation Definition\",\"scope\":[\"meta.js punctuation.definition.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Entity Names in Code Documentations\",\"scope\":[\"entity.name.type.instance.jsdoc\",\"entity.name.type.instance.phpdoc\"],\"settings\":{\"foreground\":\"#4f687d\"}},{\"name\":\"Other Variables in Code Documentations\",\"scope\":[\"variable.other.jsdoc\",\"variable.other.phpdoc\"],\"settings\":{\"foreground\":\"#406c80\"}},{\"name\":\"JavaScript module imports and exports\",\"scope\":[\"variable.other.meta.import.js\",\"meta.import.js variable.other\",\"variable.other.meta.export.js\",\"meta.export.js variable.other\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Variable Parameter Function\",\"scope\":[\"variable.parameter.function.js\"],\"settings\":{\"foreground\":\"#5760a6\"}},{\"name\":\"JavaScript[React] Variable Other Object\",\"scope\":[\"variable.other.object.js\",\"variable.other.object.jsx\",\"variable.object.property.js\",\"variable.object.property.jsx\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Variables\",\"scope\":[\"variable.js\",\"variable.other.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Entity Name Type\",\"scope\":[\"entity.name.type.js\",\"entity.name.type.module.js\"],\"settings\":{\"foreground\":\"#111111\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Support Classes\",\"scope\":[\"support.class.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JSON Property Names\",\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"JSON Support Constants\",\"scope\":[\"support.constant.json\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"JSON Property values (string)\",\"scope\":[\"meta.structure.dictionary.value.json string.quoted.double\"],\"settings\":{\"foreground\":\"#7f5889\"}},{\"name\":\"Strings in JSON values\",\"scope\":[\"string.quoted.double.json punctuation.definition.string.json\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Specific JSON Property values like null\",\"scope\":[\"meta.structure.dictionary.json meta.structure.dictionary.value constant.language\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"JavaScript Other Variable\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Ruby Variables\",\"scope\":[\"variable.other.ruby\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Ruby Class\",\"scope\":[\"entity.name.type.class.ruby\"],\"settings\":{\"foreground\":\"#9b504e\"}},{\"name\":\"Ruby Hashkeys\",\"scope\":[\"constant.language.symbol.hashkey.ruby\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Ruby Symbols\",\"scope\":[\"constant.language.symbol.ruby\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"LESS Tag names\",\"scope\":[\"entity.name.tag.less\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"LESS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Attribute Name for LESS\",\"scope\":[\"meta.attribute-selector.less entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Markdown Headings\",\"scope\":[\"markup.heading.markdown\",\"markup.heading.setext.1.markdown\",\"markup.heading.setext.2.markdown\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Markdown Italics\",\"scope\":[\"markup.italic.markdown\"],\"settings\":{\"foreground\":\"#8d46b4\",\"fontStyle\":\"italic\"}},{\"name\":\"Markdown Bold\",\"scope\":[\"markup.bold.markdown\"],\"settings\":{\"foreground\":\"#3c63b3\",\"fontStyle\":\"bold\"}},{\"name\":\"Markdown Quote + others\",\"scope\":[\"markup.quote.markdown\"],\"settings\":{\"foreground\":\"#5e6487\"}},{\"name\":\"Markdown Raw Code + others\",\"scope\":[\"markup.inline.raw.markdown\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Markdown Links\",\"scope\":[\"markup.underline.link.markdown\",\"markup.underline.link.image.markdown\"],\"settings\":{\"foreground\":\"#97505b\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Link Title and Description\",\"scope\":[\"string.other.link.title.markdown\",\"string.other.link.description.markdown\"],\"settings\":{\"foreground\":\"#403f53\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Punctuation\",\"scope\":[\"punctuation.definition.string.markdown\",\"punctuation.definition.string.begin.markdown\",\"punctuation.definition.string.end.markdown\",\"meta.link.inline.markdown punctuation.definition.string\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Markdown MetaData Punctuation\",\"scope\":[\"punctuation.definition.metadata.markdown\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Markdown List Punctuation\",\"scope\":[\"beginning.punctuation.definition.list.markdown\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Markdown Inline Raw String\",\"scope\":[\"markup.inline.raw.string.markdown\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"PHP Variables\",\"scope\":[\"variable.other.php\",\"variable.other.property.php\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Support Classes in PHP\",\"scope\":[\"support.class.php\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Punctuations in PHP function calls\",\"scope\":[\"meta.function-call.php punctuation\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"PHP Global Variables\",\"scope\":[\"variable.other.global.php\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Declaration Punctuation in PHP Global Variables\",\"scope\":[\"variable.other.global.php punctuation.definition.variable\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Language Constants in Python\",\"scope\":[\"constant.language.python\"],\"settings\":{\"foreground\":\"#a54a4a\"}},{\"name\":\"Python Function Parameter and Arguments\",\"scope\":[\"variable.parameter.function.python\",\"meta.function-call.arguments.python\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Python Function Call\",\"scope\":[\"meta.function-call.python\",\"meta.function-call.generic.python\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"Punctuations in Python\",\"scope\":[\"punctuation.python\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Decorator Functions in Python\",\"scope\":[\"entity.name.function.decorator.python\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Python Language Variable\",\"scope\":[\"source.python variable.language.special\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Python import control keyword\",\"scope\":[\"keyword.control\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"SCSS Variable\",\"scope\":[\"variable.scss\",\"variable.sass\",\"variable.parameter.url.scss\",\"variable.parameter.url.sass\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Attribute Name for SASS\",\"scope\":[\"meta.attribute-selector.scss entity.other.attribute-name.attribute\",\"meta.attribute-selector.sass entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Tag names in SASS\",\"scope\":[\"entity.name.tag.scss\",\"entity.name.tag.sass\"],\"settings\":{\"foreground\":\"#097174\"}},{\"name\":\"SASS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.scss\",\"keyword.other.unit.sass\"],\"settings\":{\"foreground\":\"#8d46b4\"}},{\"name\":\"TypeScript[React] Variables and Object Properties\",\"scope\":[\"variable.other.readwrite.alias.ts\",\"variable.other.readwrite.alias.tsx\",\"variable.other.readwrite.ts\",\"variable.other.readwrite.tsx\",\"variable.other.object.ts\",\"variable.other.object.tsx\",\"variable.object.property.ts\",\"variable.object.property.tsx\",\"variable.other.ts\",\"variable.other.tsx\",\"variable.tsx\",\"variable.ts\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript[React] Entity Name Types\",\"scope\":[\"entity.name.type.ts\",\"entity.name.type.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript[React] Node Classes\",\"scope\":[\"support.class.node.ts\",\"support.class.node.tsx\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"TypeScript[React] Entity Name Types as Parameters\",\"scope\":[\"meta.type.parameters.ts entity.name.type\",\"meta.type.parameters.tsx entity.name.type\"],\"settings\":{\"foreground\":\"#4f687d\"}},{\"name\":\"TypeScript[React] Import/Export Punctuations\",\"scope\":[\"meta.import.ts punctuation.definition.block\",\"meta.import.tsx punctuation.definition.block\",\"meta.export.ts punctuation.definition.block\",\"meta.export.tsx punctuation.definition.block\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.decorator punctuation.decorator.ts\",\"meta.decorator punctuation.decorator.tsx\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.tag.js meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"YAML Entity Name Tags\",\"scope\":[\"entity.name.tag.yaml\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"JavaScript Variable Other ReadWrite\",\"scope\":[\"variable.other.readwrite.js\",\"variable.parameter\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Support Class Component\",\"scope\":[\"support.class.component.js\",\"support.class.component.tsx\"],\"settings\":{\"foreground\":\"#aa0982\",\"fontStyle\":\"\"}},{\"name\":\"Text nested in React tags\",\"scope\":[\"meta.jsx.children\",\"meta.jsx.children.js\",\"meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript Classes\",\"scope\":[\"meta.class entity.name.type.class.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript Entity Name Type\",\"scope\":[\"entity.name.type.tsx\",\"entity.name.type.module.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript Class Variable Keyword\",\"scope\":[\"meta.class.ts meta.var.expr.ts storage.type.ts\",\"meta.class.tsx meta.var.expr.tsx storage.type.tsx\"],\"settings\":{\"foreground\":\"#79598f\"}},{\"name\":\"TypeScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.ts\",\"meta.method.declaration storage.type.tsx\"],\"settings\":{\"foreground\":\"#3c63b3\"}},{\"name\":\"normalize font style of certain components\",\"scope\":[\"meta.property-list.css meta.property-value.css variable.other.less\",\"meta.property-list.scss variable.scss\",\"meta.property-list.sass variable.sass\",\"meta.brace\",\"keyword.operator.operator\",\"keyword.operator.or.regexp\",\"keyword.operator.expression.in\",\"keyword.operator.relational\",\"keyword.operator.assignment\",\"keyword.operator.comparison\",\"keyword.operator.type\",\"keyword.operator\",\"keyword\",\"punctuation.definintion.string\",\"punctuation\",\"variable.other.readwrite.js\",\"storage.type\",\"source.css\",\"string.quoted\"],\"settings\":{\"fontStyle\":\"\"}}],\"styleOverrides\":{\"frames\":{\"editorBackground\":\"var(--sl-color-gray-7)\",\"terminalBackground\":\"var(--sl-color-gray-7)\",\"editorActiveTabBackground\":\"var(--sl-color-gray-7)\",\"terminalTitlebarDotsForeground\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"terminalTitlebarDotsOpacity\":\"0.75\",\"inlineButtonForeground\":\"var(--sl-color-text)\",\"frameBoxShadowCssValue\":\"none\"},\"textMarkers\":{\"markBackground\":\"#0000001a\",\"markBorderColor\":\"#00000055\"}}}],\"defaultLocale\":\"zh-CN\",\"styleOverrides\":{\"borderRadius\":\"0px\",\"borderWidth\":\"1px\",\"codePaddingBlock\":\"0.75rem\",\"codePaddingInline\":\"1rem\",\"codeFontFamily\":\"var(--__sl-font-mono)\",\"codeFontSize\":\"var(--sl-text-code)\",\"codeLineHeight\":\"var(--sl-line-height)\",\"uiFontFamily\":\"var(--__sl-font)\",\"textMarkers\":{\"lineDiffIndicatorMarginLeft\":\"0.25rem\",\"defaultChroma\":\"45\",\"backgroundOpacity\":\"60%\"}},\"plugins\":[{\"name\":\"Starlight Plugin\",\"hooks\":{}},{\"name\":\"astro-expressive-code\",\"hooks\":{}}]}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false},\"legacy\":{\"collections\":false},\"prefetch\":{\"prefetchAll\":true},\"i18n\":{\"defaultLocale\":\"zh-CN\",\"locales\":[{\"codes\":[\"zh-CN\"],\"path\":\"zh-CN\"},{\"codes\":[\"en\"],\"path\":\"en\"}],\"routing\":{\"prefixDefaultLocale\":false,\"redirectToDefaultLocale\":false,\"fallbackType\":\"redirect\"}}}","docs",["Map",11,12,40,41,53,54,64,65,75,76,86,87,97,98,109,110,119,120,130,131,140,141,151,152,161,162,172,173,183,184,194,195,205,206,216,217,227,228,237,238,248,249,258,259],"index",{"id":11,"data":13,"body":35,"filePath":36,"assetImports":37,"digest":39,"deferredRender":16},{"title":14,"description":15,"editUrl":16,"head":17,"template":18,"hero":19,"sidebar":32,"pagefind":16,"draft":33},"Feat","feat",true,[],"splash",{"tagline":20,"image":21,"actions":24},"有点像 \u003Cb>Vert.x\u003C/b>，又有点像 \u003Cb>SpringBoot\u003C/b> 的 Java Web 服务开发框架",{"alt":22,"file":23},"","__ASTRO_IMAGE_../../assets/houston.webp",[25],{"text":26,"link":27,"variant":28,"icon":29},"Feat 启程","./guides/about/","primary",{"type":30,"name":31},"icon","right-arrow",{"hidden":33,"attrs":34},false,{},"import { Card, CardGrid,LinkCard,LinkButton } from '@astrojs/starlight/components';\n\n## 产品特色\n\n\u003CCardGrid stagger>\n\t\u003CCard title=\"\u003Cspan style='color:#ffffff;background-color:#fa541c;border-bottom: 2px solid #fa541c'> &nbsp;F&nbsp;\u003C/span>\u003Cspan style='color:#fa541c;border-bottom: 2px solid #fa541c'>lexible\u003C/span>\" icon=\"seti:happenings\">\n        灵活，以少量的代码便可实现一套 Web 服务，低成本的集成与被集成能力。\n\t\u003C/Card>\n\t\u003CCard title=\"\u003Cspan style='color:#ffffff;background-color:#722ed1;border-bottom: 2px solid #722ed1'>&nbsp;E&nbsp;\u003C/span>\u003Cspan style='color:#722ed1;border-bottom: 2px solid #722ed1'>fficient\u003C/span>\" icon=\"rocket\">\n        高效，基线能力轻松应对海量并发，十万级、百万级 QPS 皆不在话下。\n\t\u003C/Card>\n\t\u003CCard title=\"\u003Cspan style='color:#ffffff;background-color:#52c41a;border-bottom: 2px solid #52c41a'>&nbsp;A&nbsp;\u003C/span>\u003Cspan style='color:#52c41a;border-bottom: 2px solid #52c41a'>daptable\u003C/span>\" icon=\"puzzle\">\n        适配性，支持 Http1.0/1.1/2.0、Websocket、SSE(Server-sent Events)、Http路由、文件上传、WAF(Web防火墙)、TLS/SSL 等，满足各类用户需求。\n\t\u003C/Card>\n\t\u003CCard title=\"\u003Cspan style='color:#ffffff;background-color:#eb2f96;border-bottom: 2px solid #eb2f96'>&nbsp;T&nbsp;\u003C/span>\u003Cspan style='color:#eb2f96;border-bottom: 2px solid #eb2f96'>echnical\u003C/span>\" icon=\"github\">\n        技术领先性，集成自研通信框架 smart-socket，核心技术自主可控。\n\t\u003C/Card>\n\u003C/CardGrid>\n\n\n## 生态项目\n\u003CCardGrid>\n    \u003CLinkCard title=\"smart-socket\" description=\"Java AIO 实现的支持百万级长连接通信框架\" href=\"https://smartboot.tech/smart-socket\" />\n    \u003CLinkCard title=\"smart-servlet\" description=\"提供一个自主可控的轻量级 Tomcat/Undertow 可替代版本，基于 Feat 重新定义下一代 Servlet 容器!\" href=\"https://smartboot.tech/smart-servlet\" />\n\u003C/CardGrid>\n\n\u003Chr/>\n\n\u003Ccenter>\n###  联系我们\n\n    \u003Cp>\n        Hi~ 我是 **三刀**，Feat 的作者。\n\n        您可以跟我聊聊：如何进行 Feat 的最佳实践;\n\n        也可以向我了解：关于产品实现原理的细节;\n\n        也可以跟我讨论：双方如何合作......\n\n        期待您通过下面方式，与我取得联系。\n    \u003C/p>\n\n    \u003Ch4>微信\u003C/h4>\n    \u003Cimg src=\"https://smartboot.tech/img/qrcode/personal_wx.png\" width=\"25%\"/>\n\n    \u003Ch4>邮件\u003C/h4>\n    \u003CLinkButton\n        href=\"mailto:zhengjunweimail@163.com\"\n        variant=\"secondary\"\n        icon=\"email\"\n        iconPlacement=\"start\"\n    >\n        zhengjunweimail @163.com\n    \u003C/LinkButton>\n\u003C/center>","src/content/docs/index.mdx",[38],"../../assets/houston.webp","1e44cbaaad6508bc","guides/about",{"id":40,"data":42,"body":50,"filePath":51,"digest":52,"deferredRender":16},{"title":43,"description":44,"editUrl":16,"head":45,"template":46,"sidebar":47,"pagefind":16,"draft":33},"1.1 Feat 介绍","一款企业级 Web 服务开发框架",[],"doc",{"order":48,"hidden":33,"attrs":49},1,{},"Feat 是一款 Web 服务开发框架，致力于提供高性能、低能耗的服务端综合解决方案。\n\n## 1.1.1 Feat 的开源故事\n\nFeat 诞生于 2024年12月21日，这不是一个从零开始的项目，它的前身是另一款开源项目：smart-http。\n\n在创建 Feat 之前，我做出了一个比较冲动、令人遗憾的决定：将维护了六年之久的 smart-http 项目转交给社区朋友维护。\n\n之所以如此，是因为 smart-http 开始让我感受到强烈的束缚感，社区对它的要求与我所追求的开源状态存在巨大的矛盾。\n继续维护这个项目对我而言是一种沉痛的负担，放弃它又于心不忍且是对社区用户的不负责。\n所幸 smart-http 已经相对稳定成熟，又有社区用户表示愿意接收它。\n故此，便将该项目移交出去了，但这并不代表同 smart-http 的缘分就此终止。\n\n往后，smart-http 会在 Feat 中发展出另外一种形态。更多激进的想法能得以尝试，不会因外界的声音而束手束脚。\nFeat 的影响力不一定比得上 smart-http（虽然smart-http也没几个用户🥵），但它一定比 smart-http 有着更多的可能性。\n\n## 1.1.2 为什么需要 Feat，因它能有何不同？\n我们希望基于 Feat 开发的 Web 服务可以：\n- 在运行速度上更高效一些，改变大家对于 Java 服务性能差的观念。\n- 在资源开销上更节省一些，改变大家对于 Java 服务内存高的观念。\n- 在开发体验上更友好一些，改变大家对于 Java 服务设计臃肿的观念。\n\n\n## 1.1.3 如何正确使用 Feat\n\nFeat 采用了 AGPL 协议，在遵循该开源协议的前提下，你可以自由地使用 Feat 开发 Web 服务。\n\n倘若你的应用场景无法遵循开源规约，需 [联系我们](/feat/#联系我们) 获得 Feat 的商业授权方可使用。","src/content/docs/guides/about.mdx","de4aeefb9acc4e88","guides/getstart",{"id":53,"data":55,"body":61,"filePath":62,"digest":63,"deferredRender":16},{"title":56,"description":44,"editUrl":16,"head":57,"template":46,"sidebar":58,"pagefind":16,"draft":33},"1.2 入门指南",[],{"order":59,"hidden":33,"attrs":60},2,{},"import {Aside, TabItem, Tabs} from '@astrojs/starlight/components';\nimport helloFeat from './img/1_2_hello_feat.png';\nimport helloWorld from './img/1_2_hello_world.png';\n\n在本章节中，您将学习如何开始使用 Feat 快速开发一个 Web 项目。\n\n开始之前，请确保已完成以下几项前置准备工作：\n\n- JDK 1.8 或更高版本\n- Maven 3.0 或更高版本\n- IDE（本教程示例基于 IntelliJ IDEA）\n- [curl](https://curl.se/) 或者 **浏览器** 用于 HTTP 请求测试。\n\n## 1.2.1 引入 Feat\n在您的 Maven 工程 pom.xml 文件中添加以下配置，即可完成 Feat 的引入：\n\n```xml title=\"pom.xml\"\n\u003Cdependency>\n    \u003CgroupId>tech.smartboot.feat\u003C/groupId>\n    \u003CartifactId>feat-core\u003C/artifactId>\n    \u003Cversion>${feat.version}\u003C/version>\n\u003C/dependency>\n```\n\u003CAside>\n    `${feat.version}` 需根据实际情况设置，建议使用[最新版本](https://central.sonatype.com/artifact/tech.smartboot.feat/feat-core)。\n\u003C/Aside>\n\n## 1.2.2 快速启动\n下面通过一个简单的示例，以检验 Feat 是否成功引入，并演示如何快速启动一个 Web 服务。\n```java title=\"HelloFeat.java\" {3}\npublic class HelloFeat {\n    public static void main(String[] args) {\n        Feat.httpServer().listen();\n    }\n}\n```\n\n启动上面的程序后，运行效果：\n\u003CTabs>\n    \u003CTabItem value=\"浏览器\" label=\"浏览器\">\n        \u003Cimg src={helloFeat.src} alt=\"hello world\" width=\"60%\" className=\"shadow\"/>\n    \u003C/TabItem>\n    \u003CTabItem value=\"curl\" label=\"curl\">\n        如果您使用的是 **curl** 命令行工具，可以执行以下命令进行测试：\n        ```shell {1}\n        curl -v http://localhost:8080\n        *   Trying 127.0.0.1:8080...\n        * Connected to localhost (127.0.0.1) port 8080 (#0)\n        > GET / HTTP/1.1\n        > Host: localhost:8080\n        > User-Agent: curl/7.77.0\n        > Accept: */*\n        >\n        * Mark bundle as not supporting multiuse\n        \u003C HTTP/1.1 200 OK\n        \u003C Server:feat\n        \u003C Date:Tue, 14 Jan 2025 00:00:00 GMT\n        \u003C Content-Type:text/html; charset=utf-8\n        \u003C Transfer-Encoding: chunked\n        \u003C\n        * Connection #0 to host localhost left intact\n        Hello Feat%\n        ```\n    \u003C/TabItem>\n\u003C/Tabs>\n\n🎉 **好了，我们的第一个 Web 服务就完成了。**\n\n\n\n## 1.2.3 编写自定义响应\n现在我们再来写一个自定义的响应的服务，并指定服务端端口为 8081。\n```java title=\"HelloWorld.java\" {3,4,5}\npublic class HelloWorld {\n    public static void main(String[] args) {\n        Feat.httpServer()\n                .httpHandler(request -> request.getResponse().write(\"Hello World\"))\n                .listen(8081);\n    }\n}\n```\n运行效果：\n\u003CTabs>\n    \u003CTabItem value=\"浏览器\" label=\"浏览器\">\n        \u003Cimg src={helloWorld.src} alt=\"hello world\" width=\"60%\" className=\"shadow\"/>\n    \u003C/TabItem>\n    \u003CTabItem value=\"curl\" label=\"curl\">\n        ```shell {1}\n        curl -v http://localhost:8081\n        *   Trying 127.0.0.1:8081...\n        * Connected to localhost (127.0.0.1) port 8081 (#0)\n        > GET / HTTP/1.1\n        > Host: localhost:8081\n        > User-Agent: curl/7.77.0\n        > Accept: */*\n        >\n        * Mark bundle as not supporting multiuse\n        \u003C HTTP/1.1 200 OK\n        \u003C Server:feat\n        \u003C Date:Tue, 14 Jan 2025 00:00:00 GMT\n        \u003C Content-Type:text/html; charset=utf-8\n        \u003C Transfer-Encoding: chunked\n        \u003C\n        * Connection #0 to host localhost left intact\n        Hello World%\n        ```\n    \u003C/TabItem>\n\u003C/Tabs>\n\n## 1.2.4 建议&反馈\n希望这篇教程能够帮助您对 Feat 有一个初步的了解。\n如果您在使用过程中遇到任何问题，欢迎随时向我们提交 [Issue](https://gitee.com/smartboot/feat/issues/new/)。","src/content/docs/guides/getstart.mdx","a06105e4484f9cec","server/serveroptions",{"id":64,"data":66,"body":72,"filePath":73,"digest":74,"deferredRender":16},{"title":67,"description":68,"editUrl":16,"head":69,"template":46,"sidebar":70,"pagefind":16,"draft":33},"2.1 ServerOptions 配置说明","Feat ServerOptions 配置说明",[],{"order":48,"hidden":33,"attrs":71},{},"## debug\n**类型:** `boolean`\n\n**默认值:** `false`\n\n是否开启调试模式。\n\n```java \"debug(true)\"\nFeat.httpServer(options -> options.debug(true))\n        .listen();\n```\n开启 debug 模式后，会在控制台输出 HTTP 请求/响应的详细信息。\n适用于调试和排查问题，建议生产环境下关闭。\n\n\n## bannerEnabled\n**类型:** `boolean`\n**默认值:** `true`\n是否开启 banner。\n```java \"bannerEnabled(false)\"\nFeat.httpServer(options -> options.bannerEnabled(false))\n       .listen();\n```\n开启 banner 后，启动时会在控制台输出 Feat HTTP 服务器的版本信息。\n\n\n## setMaxRequestSize\n**类型:** `long`\n\n**默认值:** `Integer.MAX_VALUE`\n\n设置最大请求大小。\n```java \"setMaxRequestSize(1024 * 1024 * 1024)\"\nFeat.httpServer(options -> options.setMaxRequestSize(1024 * 1024 * 1024))\n       .listen();\n```\nHTTP 请求报文的大小不能超过这个值，否则会返回 **413(Payload Too Large)** 错误。\n\n## readBufferSize\n**类型:** `int`\n\n**默认值:** `1024`\n\n设置单个 TCP 连接的读取缓冲区大小。\n```java \"readBufferSize(16 * 1024)\"\nFeat.httpServer(options -> options.readBufferSize(16 * 1024))\n      .listen();\n```\n合理设置这个值，可以提高性能和减少内存占用。\n\n## writeBufferSize\n**类型:** `int`\n\n**默认值:** `1024`\n\n设置单个 TCP 连接的写入缓冲区大小。\n```java \"writeBufferSize(16 * 1024)\"\nFeat.httpServer(options -> options.writeBufferSize(16 * 1024))\n     .listen();\n```\n\n## threadNum\n**类型:** `int`\n\n**默认值:** `CPU 核数`,至少为 2。\n\n设置 HTTP 服务器的线程数。\n```java \"threadNum(4)\"\nFeat.httpServer(options -> options.threadNum(4))\n    .listen();\n```\n\n## headerLimiter\n**类型:** `int`\n**默认值:** `100`\n设置 HTTP 请求头的限制。\n```java \"headerLimiter(10)\"\nFeat.httpServer(options -> options.headerLimiter(10))\n    .listen();\n```\n若解析出的 HTTP 请求头数量超过这个值，会忽略后续的请求头。\n\n我们认为通常情况下 HTTP 请求头数量应该限定在某个具体的数值范围内，若超过这个值，可能是存在恶意请求。","src/content/docs/server/serveroptions.mdx","dc3ad07f2636580b","appendix/httpstatus",{"id":75,"data":77,"body":83,"filePath":84,"digest":85,"deferredRender":16},{"title":78,"description":79,"editUrl":16,"head":80,"template":46,"sidebar":81,"pagefind":16,"draft":33},"Http 状态码","A reference page in my new Starlight docs site.",[],{"hidden":33,"attrs":82},{},"# 状态码\n## 2xx 成功\n- **200 OK**：表示请求成功。通常用于确认操作完成。\n- **201 Created**：表示请求成功并且服务器创建了新的资源。\n- **204 No Content**：表示请求成功，但没有返回任何内容。\n\n## 3xx 重定向\n- **301 Moved Permanently**：永久重定向，客户端应更新缓存。\n- **302 Found**：临时重定向，客户端应继续使用原方法访问新地址。\n- **304 Not Modified**：表示资源未被修改，客户端可以使用缓存。\n\n## 4xx 客户端错误\n- **400 Bad Request**：请求语法错误。\n- **401 Unauthorized**：未提供有效的身份验证信息。\n- **403 Forbidden**：服务器理解请求，但拒绝执行。\n- **404 Not Found**：请求的资源不存在。\n\n## 5xx 服务器错误\n- **500 Internal Server Error**：服务器内部错误。\n- **502 Bad Gateway**：服务器作为网关或代理时，从上游服务器接收到无效响应。\n- **503 Service Unavailable**：服务器暂时不可用。\n- **504 Gateway Timeout**：作为网关或代理的服务器未及时从上游服务器接收响应。","src/content/docs/appendix/httpstatus.mdx","5fc641ff3a1996e7","server/router",{"id":86,"data":88,"body":94,"filePath":95,"digest":96,"deferredRender":16},{"title":89,"description":90,"editUrl":16,"head":91,"template":46,"sidebar":92,"pagefind":16,"draft":33},"2.2 Router 路由组件","Feat Router",[],{"order":59,"hidden":33,"attrs":93},{},"Feat中的`Router`组件是一个功能强大的HTTP请求分发器，用于将HTTP请求分发到对应的处理程序（Handler）。它是基于`NodePath`树状结构实现的，支持多种路由匹配方式，包括精确匹配、通配符匹配、路径参数匹配等。\n\n以下是`Router`组件的主要功能和使用说明：\n\n**主要功能**\n\n- **路由匹配**：根据请求的URI将请求分发到对应的处理程序。\n- **路径参数提取**：支持从路径中提取参数。\n- **多种匹配方式**：支持精确匹配、通配符匹配（`*`）、路径参数匹配（`:param`）等。\n- **默认路由**：未匹配到任何路由时，使用默认处理程序。\n\n**使用场景**\n\n- 配置HTTP服务的路由规则，将不同的URI请求分发到不同的处理程序。\n- 提取路径参数，供处理程序使用。\n\n---\n\n\n\n## 2.2.1 路由匹配原理\n\n### 1. 核心数据结构\n`Router`内部通过`NodePath`树状结构存储路由规则。每个`NodePath`节点代表一个路径部分（如`/user`或`:id`），树的叶子节点对应具体的处理程序。\n\n### 2. 匹配流程\n1. **解析请求URI**：将请求URI拆分为路径部分。\n2. **树状匹配**：\n- 从根节点开始，逐层匹配路径部分。\n- 支持精确匹配、通配符匹配和路径参数匹配。\n3. **提取路径参数**：如果匹配到路径参数（如`:id`），将其提取到`Context`中。\n\n---\n\n## 2.2.2 路由配置示例\n\n### 1. 精确匹配\n```java\nRouter router = new Router();\nrouter.route(\"/user/info\", new RouterHandler() {\n    @Override\n    public void handle(Context ctx) throws Throwable {\n        ctx.Response.write(\"User info\");\n    }\n});\n```\n\n### 2. 路径参数匹配\n```java\nrouter.route(\"/user/:id\", new RouterHandler() {\n    @Override\n    public void handle(Context ctx) throws Throwable {\n        String id = ctx.pathParam(\"id\");\n        ctx.Response.write(\"User ID: \" + id);\n    }\n});\n```\n\n### 3. 通配符匹配\n```java\nrouter.route(\"/user/*\", new RouterHandler() {\n    @Override\n    public void handle(Context ctx) throws Throwable {\n        ctx.Response.write(\"User resource\");\n    }\n});\n```\n\n### 4. 默认路由\n```java\nRouter defaultRouter = new Router(new RouterHandler() {\n    @Override\n    public void handle(Context ctx) throws Throwable {\n        ctx.Response.setHttpStatus(HttpStatus.NOT_FOUND);\n        ctx.Response.write(\"404 Not Found\");\n    }\n});\n```\n\n---\n\n## 2.2.3 完整示例\n\n下面是一个完整的示例，展示了如何使用`Router`组件配置多种路由规则，并处理不同类型的请求：\n\n```java title=RouterDemo1.java\npackage tech.smartboot.feat.demo.router;\n\nimport tech.smartboot.feat.Feat;\nimport tech.smartboot.feat.router.Router;\n\npublic class RouterDemo1 {\n    public static void main(String[] args) {\n        Router router = new Router();\n        // 配置默认路由\n        router\n                .route(\"/\", (ctx) -> {\n                    ctx.Response.write(\"root: \" + ctx.Request.getRequestURI());\n                })\n                // 配置通配符路由\n                .route(\"/*\", (ctx) -> {\n                    ctx.Response.write(\"rootPattern: \" + ctx.Request.getRequestURI());\n                })\n                // 配置通配符路由\n                .route(\"/a/b/*\", (ctx) -> {\n                    ctx.Response.write(\"/a/b/* pattern: \" + ctx.Request.getRequestURI());\n                })\n                // 配置路径参数路由\n                .route(\"/route1\", (ctx) -> {\n                    ctx.Response.write(\"route1: \" + ctx.Request.getRequestURI());\n                })\n                .route(\"/route2\", (ctx) -> {\n                    ctx.Response.write(\"route2: \" + ctx.Request.getRequestURI());\n                })\n                .route(\"/route3/:id\", ctx -> ctx.Response.write(ctx.pathParam(\"id\")))\n                .route(\"/route4/:key/:value\", (ctx) -> {\n                    ctx.Response.write(ctx.pathParam(\"key\") + \":\" + ctx.pathParam(\"value\"));\n                });\n\n        Feat.httpServer().httpHandler(router).listen();\n    }\n}\n```\n\n### 运行效果\n\n运行程序后，可以通过浏览器或工具访问以下路径验证效果：\n\n- `http://localhost:8080`：返回`\"root: /\"`\n- `http://localhost:8080/test`：返回`\"rootPattern: /test\"`\n- `http://localhost:8080/a/b/c`：返回`\"/a/b/* pattern: /a/b/c\"`\n- `http://localhost:8080/route1`：返回`\"route1: /route1\"`\n- `http://localhost:8080/route2`：返回`\"route2: /route2\"`\n- `http://localhost:8080/route3/123`：返回`\"123\"`\n- `http://localhost:8080/route4/name/feat`：返回`\"name:feat\"`\n\n## 2.2.3 总结\n\nFeat中的`Router`组件是一个功能强大的路由分发器，支持多种路由匹配方式和灵活的上下文管理。通过`Router`，开发者可以轻松配置HTTP服务的路由规则，并将请求分发到对应的处理程序。","src/content/docs/server/router.mdx","bb56d6c29e864554","server/file_server",{"id":97,"data":99,"body":106,"filePath":107,"digest":108,"deferredRender":16},{"title":100,"description":101,"editUrl":16,"head":102,"template":46,"sidebar":103,"pagefind":16,"draft":33},"2.3 静态服务","Feat Static Service",[],{"order":104,"hidden":33,"attrs":105},3,{},"import file_server_1 from './img/file_server_1.png';\nimport file_server_2 from './img/file_server_2.png';\nimport {Steps} from \"@astrojs/starlight/components\";\nimport Mermaid from '../../../components/Mermaid.astro';\n\nFeat框架内置了一个高性能的静态文件服务模块（FileServer），它可以作为Nginx的替代方案，用于托管静态资源。\n\n本文将详细介绍如何使用FileServer模块，包括基本用法、功能特性以及高级配置。\n\n## 1. 概述\n\nFileServer模块是一个轻量级的静态资源服务器，支持以下功能：\n- 静态文件托管\n- 自动目录索引（可选）\n- 文件缓存\n- 断点续传\n- 支持大文件传输\n- 高性能IO处理\n\n通过FileServer模块，开发者可以快速搭建一个高效的静态资源服务器，适用于以下场景：\n- 托管网站静态资源（HTML、CSS、JavaScript等）\n- 提供文件下载服务\n- 替代Nginx作为静态资源服务器\n\n\u003CMermaid code={`\ngraph TD\n    A[用户请求] --> B[Bootstrap初始化]\n    B --> C[配置FileServerOptions]\n    C --> D[HttpStaticResourceHandler处理请求]\n    D --> E[解析请求URI]\n    E --> F{文件/目录检查}\n    F --> G[文件存在]\n    G --> H[读取文件内容]\n    H --> I[发送响应]\n    F --> J[文件不存在]\n    J --> K[返回404错误]\n    D --> L[处理目录索引]\n    L --> M[生成目录列表]\n    M --> I\n    D --> N[处理缓存]\n    N --> O{缓存检查}\n    O --> P[返回304未修改]\n    O --> Q[返回文件内容]\n    Q --> I\n    `}/>\n\n基本用法：\n```java \"baseDir(\\\"./\\\")\" \"fileServer\"\npublic class FileServerDemo {\n    public static void main(String[] args) {\n        Feat.fileServer(opts -> opts.baseDir(\"./\")).listen();\n    }\n}\n```\n\n## 参数说明\n\n### baseDir\n**类型:** `String`\n\n**默认值:** `./`\n\n静态资源文件的存放目录，该参数为 **必填项**。\n\n示例：\n\u003CSteps>\n    1. 在任意目录下创建一个 html 文件，\n        假设：\n        - Linux：/root/static/\n        - Windows: C:/static/\n        - Mac: /Users/xxx/static/\n        ```html title=\"index.html\"\n        \u003Chtml lang=\"\">\n            \u003Chead>\n                \u003Ctitle>Feat\u003C/title>\n            \u003C/head>\n            \u003Cbody>\n                \u003Ch1>Hello Feat\u003C/h1>\n                \u003Cp>File Server\u003C/p>\n            \u003C/body>\n        \u003C/html>\n        ```\n    2. 以 Linux 环境为例，实现代码如下：\n\n        ```java \"baseDir\"\n        public class FileServerDemo {\n            public static void main(String[] args) {\n                Feat.fileServer(opts -> opts.baseDir(\"/root/static/\")).listen();\n            }\n        }\n        ```\n    3. 运行程序并打开浏览器，访问：`http://localhost:8080`，效果如下：\n        \u003Cimg src={file_server_1.src} alt=\"hello world\" width=\"60%\" className=\"shadow\"/>\n\u003C/Steps>\n\n### autoIndex\n**类型:** `boolean`\n\n**默认值:** `false`\n\n若设置为：true，则允许以目录列表的形式展现。\n\n示例：\n\u003CSteps>\n    1. 运行以下程序：\n        ```java \"autoIndex(true)\"\n        public class FileServerDemo {\n            public static void main(String[] args) {\n                Feat.fileServer(opts -> opts.autoIndex(true)).listen();\n            }\n        }\n        ```\n    2. 打开浏览器，访问：`http://localhost:8080`，效果如下：\n        \u003Cimg src={file_server_2.src} alt=\"hello world\" width=\"40%\" className=\"shadow\"/>\n\u003C/Steps>","src/content/docs/server/file_server.mdx","e5806a4866becc4f","cloud/about",{"id":109,"data":111,"body":116,"filePath":117,"digest":118,"deferredRender":16},{"title":112,"description":44,"editUrl":16,"head":113,"template":46,"sidebar":114,"pagefind":16,"draft":33},"3.1 关于",[],{"order":48,"hidden":33,"attrs":115},{},"import idea_setting from './img/idea_setting.png';\nimport demo from './img/demo.png';\nimport {Aside, TabItem, Tabs} from \"@astrojs/starlight/components\";\n\nFeat Cloud 提供了一种面向企业级应用开发的解决方案，它的定位有点像 SpringBoot。\n\n设计方面，Feat Cloud 尽最大可能保留了 SpringBoot 的使用习惯，以此降低开发者的学习成本。\n\n技术方面，Feat Cloud 在编译期对代码进行静态分析，最大化提升服务运行性能，降低资源消耗。\n\n## 3.1.1 准备工作\n\n### 3.1.1.2 引入 Maven 依赖\n创建一个 Maven 项目，在 `pom.xml` 文件中添加以下依赖：\n```xml title=pom.xml\n\u003Cdependency>\n    \u003CgroupId>tech.smartboot.feat\u003C/groupId>\n    \u003CartifactId>feat-cloud-starter\u003C/artifactId>\n    \u003Cversion>${feat.version}\u003C/version>\n\u003C/dependency>\n```\n\u003CAside>\n    **$\\{feat.version}**\n    需根据实际情况设置，建议使用[最新版本](https://central.sonatype.com/artifact/tech.smartboot.feat/feat-cloud-starter)。\n\u003C/Aside>\n\n### 3.1.1.3 配置 IDEA\n调整 IDEA 编译配置，以启用 Feat Cloud 的静态优化功能，**否则请求将无法正常路由**。\n\n设置路径为：`Preferences -> Build, Execution, Deployment -> Build Tools -> Maven -> Runner`，\n勾选`Delegate IDE build/run actions to Maven` 并点击 `OK` 保存配置。\n\n\u003Cimg src={idea_setting.src} alt=\"hello world\" width=\"60%\" className=\"shadow\"/>\n\n## 3.1.2 快速启动\n在 Maven 工程中创建一个 `FeatCloudDemo.java` 文件，添加以下代码：\n``` java title=FeatCloudDemo.java\n@Controller\npublic class FeatCloudDemo {\n    @RequestMapping(\"/cloud\")\n    public String helloWorld() {\n        return \"hello Feat Cloud\";\n    }\n\n    public static void main(String[] args) {\n        Feat.cloudServer().listen();\n    }\n}\n```\n启动程序，打开浏览器访问 `http://localhost:8080/cloud`。\n\u003Cimg src={demo.src} alt=\"hello world\" width=\"60%\" className=\"shadow\"/>\n\n\n## 3.1.3 工作原理\n从上面的代码可以看出，Feat Cloud 是基于注解的方式进行服务开发的。\n通常来说，框架会在运行时解析注解并生成对应的服务。\n\n但是，Feat Cloud 却是在编译时对代码进行静态分析，生成对应的服务。\n其核心原理是**运用了 APT（Annotation Processing Tool）技术，并结合 ServiceLoader 实现了 0 反射的服务加载机制**。\n\n\n### 3.1.3.1 静态转码\n以 FeatCloudDemo 为例，开发人员编写的源代码在编译时经过一次静态转码，生成了一个新的 java 文件 `FeatCloudDemoBeanAptLoader.java`。\n\u003CTabs>\n    \u003CTabItem label=\"源代码\">\n        ``` java title=FeatCloudDemo.java\n        @Controller\n        public class FeatCloudDemo {\n            @RequestMapping(\"/cloud\")\n            public String helloWorld() {\n                return \"hello Feat Cloud\";\n            }\n\n            public static void main(String[] args) {\n                Feat.cloudServer().listen();\n            }\n        }\n        ```\n    \u003C/TabItem>\n    \u003CTabItem label=\"静态转码\">\n        ```java title=FeatCloudDemoBeanAptLoader.java\n        public class FeatCloudDemoBeanAptLoader extends AbstractServiceLoader {\n            private FeatCloudDemo bean;\n\n            public void loadBean(ApplicationContext applicationContext) throws Throwable {\n                bean = new FeatCloudDemo();\n                applicationContext.addBean(\"featCloudDemo\", bean);\n            }\n\n            public void autowired(ApplicationContext applicationContext) {\n\n            }\n\n            public void router(Router router) {\n                router.route(\"/cloud\", req -> {\n                    String rst = bean.helloWorld();\n                    byte[] bytes = rst.getBytes(\"UTF-8\");\n                    req.getResponse().setContentLength(bytes.length);\n                    req.getResponse().write(bytes);\n                });\n            }\n\n            public void destroy() throws Throwable {\n            }\n\n            public void postConstruct(ApplicationContext applicationContext) throws Throwable {}\n            }\n        ```\n    \u003C/TabItem>\n\n\u003C/Tabs>\n\n可以从静态转码后的代码中看出，对于 bean 的实例化，是通过 `new` 关键字进行的，而不是通过反射。\n\n对于路由的配置，也是通过调用 Feat Server 中的 Router 方法进行的，也不是通过反射。\n\n因此，**Feat Cloud 可以在提供优雅的开发体验的同时，也极大地保留了 Feat Server 框架的性能优势。**\n\n### 3.1.3.2 服务载入\nController 在编译时完成转码后，下一步便是需要在程序启动后能够被正确加载，此处需要用到的技术便是 `java.util.ServiceLoader`。\n\nController 静态转码所生成的类文件默认实现了 `tech.smartboot.feat.cloud.service.CloudService` 接口，同时会自动生成一个 service 文件：\n\n**`META-INF/services/tech.smartboot.feat.cloud.service.CloudService`**\n\n当调用 ApplicationContext@start 方法时：\n1. 首先通过 **ServiceLoader.load(CloudService.class)** 加载所有实现了 **CloudService** 接口的类。并根据 `isIgnore` 规则过滤出有效的服务。\n2. 遍历所有服务，调用其 `loadBean` 方法，完成 bean 的实例化。\n3. 遍历所有服务，调用其 `autowired` 方法，完成各实例的依赖注入。\n4. 遍历所有服务，调用其 `postConstruct` 方法，完成各实例的初始化。\n5. 遍历所有服务，调用其 `router` 方法，完成 Controller 路由的配置。\n\n\u003CTabs>\n    \u003CTabItem label=\"ApplicationContext.java\">\n\n        ```java title=ApplicationContext.java \"ServiceLoader.load\" \"isIgnore(service)\" \"service.loadBean\" \"service.autowired\" \"service.postConstruct\" \"service.router\"\n        public class ApplicationContext {\n\n            ...\n\n            public void start() throws Throwable {\n                for (CloudService service : ServiceLoader.load(CloudService.class)) {\n                    if (isIgnore(service)) {\n                        continue;\n                    }\n                    services.add(service);\n                }\n                for (CloudService service : services) {\n                    service.loadBean(this);\n                }\n\n                for (CloudService service : services) {\n                    service.autowired(this);\n                }\n                for (CloudService service : services) {\n                    service.postConstruct(this);\n                }\n                for (CloudService service : services) {\n                    service.router(router);\n                }\n            }\n\n            ...\n        }\n        ```\n    \u003C/TabItem>\n    \u003CTabItem label=\"CloudService.java\">\n        ```java title=CloudService.java\n        public interface CloudService {\n            void loadBean(ApplicationContext context) throws Throwable;\n\n            void autowired(ApplicationContext context);\n\n            void postConstruct(ApplicationContext context) throws Throwable;\n\n            void destroy() throws Throwable;\n\n            void router(Router router);\n        }\n        ```\n    \u003C/TabItem>\n\u003C/Tabs>\n\n### 3.1.3.3 启动服务\n在这个步骤中，由于 `ApplicationContext@start` 中已经完成了所有服务的实例化、依赖注入、初始化、路由配置等工作，因此，最后一步便是将 Router 实例设置到 HttpServer 中，启动服务。\n\n```java title=Feat.java \"application.start();\" \"application.destroy();\" \"application::destroy\" \"application.getRouter()\"\npublic static HttpServer cloudServer(Consumer\u003CCloudOptions> options) {\n    CloudOptions opt = new CloudOptions();\n    options.accept(opt);\n    opt.serverName(\"feat-cloud\");\n    ApplicationContext application = new ApplicationContext(opt);\n    opt.getExternalBeans().forEach(application::addBean);\n    application.start();\n\n    HttpServer server = Feat.httpServer(opt);\n    ...\n    server.httpHandler(application.getRouter());\n    return server;\n}\n```","src/content/docs/cloud/about.mdx","fb87b8622d373827","cloud/db",{"id":119,"data":121,"body":127,"filePath":128,"digest":129,"deferredRender":16},{"title":122,"description":44,"editUrl":16,"head":123,"template":46,"sidebar":124,"pagefind":16,"draft":33},"3.5 数据库开发 🔐",[],{"order":125,"hidden":33,"attrs":126},5,{},"import {TabItem, Tabs,Aside} from \"@astrojs/starlight/components\";\nimport CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>\n\n\nFeat Cloud 已同 Mybatis 做了一定程度的集成，你可以直接使用 Mybatis 提供的 Mapper 接口来进行数据库的操作。\n\n## 3.5.1 配置 mybatis-config.xml\n在 `src/main/resources` 目录下创建 `mybatis-config.xml`， 文件内容如下：\n```xml\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\u003C!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"https://mybatis.org/dtd/mybatis-3-config.dtd\">\n\u003Cconfiguration>\n    \u003Cplugins>\n       ...\n    \u003C/plugins>\n    \u003Cenvironments default=\"mysql\">\n        \u003Cenvironment id=\"mysql\">\n            \u003CtransactionManager type=\"JDBC\"/>\n            \u003CdataSource type=\"POOLED\">\n                \u003Cproperty name=\"driver\" value=\"com.mysql.cj.jdbc.Driver\"/>\n                \u003Cproperty name=\"url\" value=\"jdbc:mysql://localhost:3306/test?characterEncoding=utf-8\"/>\n                \u003Cproperty name=\"username\" value=\"root\"/>\n                \u003Cproperty name=\"password\" value=\"root\"/>\n            \u003C/dataSource>\n        \u003C/environment>\n    \u003C/environments>\n    \u003Cmappers>\n        \u003C!-- 扫描mapper接口 -->\n        \u003Cpackage name=\"org.smartboot.feat.demo.dao.mapper\"/>\n    \u003C/mappers>\n\u003C/configuration>\n```\n该文件可以可以放置在任意子目录下，例如 `src/main/resources/mybatis/mybatis-config.xml`。\n\n## 3.5.2 实例化 SqlSessionFactory\n有两种方式可以实例化 SqlSessionFactory，第一种是在 Bean 或者 Controller 实例中定义一个方法，该方法返回 SqlSessionFactory 对象。\n\n\u003CTabs>\n    \u003CTabItem label=\"@Bean\">\n    ```\n    @Bean\n    public class MybatisSessionFactory {\n\n        @Bean(\"sessionFactory\")\n        public SqlSessionFactory sessionFactory() throws IOException {\n            return new SqlSessionFactoryBuilder().build(Resources.getResourceAsStream(\"mybatis/mybatis-config.xml\"));\n        }\n    }\n    ```\n    \u003C/TabItem>\n\n    \u003CTabItem label=\"@Controller\">\n    ```\n    @Controller\n    public class ControllerDemo {\n\n        @Bean(\"sessionFactory\")\n        public SqlSessionFactory sessionFactory() throws IOException {\n            return new SqlSessionFactoryBuilder().build(Resources.getResourceAsStream(\"mybatis/mybatis-config.xml\"));\n        }\n    }\n    ```\n    \u003C/TabItem>\n\u003C/Tabs>\n\n\u003CAside>\n   生成的 SqlSessionFactory 对象 bean 名称必须为 **sessionFactory**。\n\u003C/Aside>\n\n## 3.5.3 定义@Mapper接口\n@Mapper 的使用方式同 Spring 基本一致，例如：\n```java title=\"UserMapper.java\"\n@Mapper\npublic interface UserMapper {\n\n    @Select({\"\u003Cscript>\",\n            \"select * from user_info \",\n            \"WHERE 1=1\",\n            \"order by username\",\n            \"\u003C/script>\"})\n    @ResultType(UserDO.class)\n    List\u003CUserDO> getUserList(UserQuery query);\n\n    @Select(\"select * from user_info where username=#{username} and password=#{password}\")\n    @ResultType(UserDO.class)\n    UserDO getUser(@Param(\"username\") String username, @Param(\"password\") String password);\n\n    /**\n     * 新增订阅记录\n     */\n    @Insert(\"insert into user_info(username,password,role,`desc`) values(#{username},#{password},#{role},#{desc})\")\n    void insert(UserDO userDO);\n\n    @Delete(\"\u003Cscript>delete from user_info where username in\" +\n            \"   \u003Cforeach collection='users' item='username' index='index'\" +\n            \"          open='(' close=')' separator=','>\" +\n            \"      #{username}\" +\n            \"   \u003C/foreach> \" +\n            \"\u003C/script>\")\n    int deleteUsers(@Param(\"users\") List\u003CString> usernames);\n}\n```\n\n## 3.5.4 使用 @Mapper\nMapper 接口的使用方式同普通 Bean 一致，通过 `@Autowired` 注解注入即可。\n```java title=\"ControllerDemo.java\"\n@Controller\npublic class ControllerDemo {\n\n    @Autowired\n    private UserMapper userMapper;\n\n    @RequestMapping(\"/user\")\n    public String user() {\n        UserDO userDO = userMapper.getUser(\"admin\", \"123456\");\n        System.out.println(userDO);\n        return \"success\";\n    }\n}\n```","src/content/docs/cloud/db.mdx","2a4ca0815d63539a","cloud/life_cycle",{"id":130,"data":132,"body":137,"filePath":138,"digest":139,"deferredRender":16},{"title":133,"description":44,"editUrl":16,"head":134,"template":46,"sidebar":135,"pagefind":16,"draft":33},"3.2 生命周期",[],{"order":59,"hidden":33,"attrs":136},{},"在 Feat Cloud 中对于托管的实例的生命周期管理可分为：**创建** -> **属性填充** -> **初始化** -> **使用** -> **销毁** 几个核心阶段。\n\n## 3.2.1 创建实例\nFeat Cloud 通过 **@Bean** 和 **@Controller** 注解来定义实例对象。\n### 3.2.1.1 方式1\n在某个 class 上添加注解 `@Bean`。Feat Cloud 启动时会自动创建该 Bean，bean 的名称默认为类名首字母小写。\n```java {1}\n@Bean\npublic class BeanDemo{\n\n}\n```\n如果需要自定义 bean 的名称，可以通过 `value` 属性来指定。例如：@Bean(\"beanDemo2\")\n\n```java {1}\n@Bean(\"beanDemo2\")\npublic class BeanDemo{\n\n}\n```\n\n@Controller 是一种特殊的 Bean，它没有 bean 名称的概念。\n我们认为一个 Controller 的核心功能就是提供 HTTP 服务，而不是成一个可被外部依赖的 bean 对象。\n```java {1}\n@Controller\npublic class ControllerDemo{\n\n}\n```\n\n### 3.2.1.2 方式2\n在 Bean/Controller 的中通过 `@Bean` 注解定义 Bean 方法。\n若未在 @Bean 中指定 bean 的名称，则默认为方法名。\n```java {3}\n@Bean\npublic class BeanDemo{\n    @Bean\n    public BeanDemo beanDemo2(){\n        return new BeanDemo();\n    }\n}\n```\n### 3.2.1.3 方式3\n服务启动时通过`addExternalBean`方法添加外部 Bean。\n```java \"addExternalBean\"\npublic class FeatCloudDemo {\n\n    public static void main(String[] args) {\n        Feat.cloudServer(opts -> opts.addExternalBean(\"beanDemo\", new BeanDemo()))\n            .listen();\n    }\n}\n```\n**注意：@Autowired、@PostConstruct、@PreDestroy 等注解的相关特性不在此类 Bean 中生效。**\n\n## 3.2.2 @Autowired：属性填充\n\n该注解用于填充 Bean 或者 Controller 的属性，类似于 Spring 中的 `@Autowired`。\n\n**注意：因为技术方面的原因，现阶段需要显示提供属性的 setter 方法。**\n```java \"@Autowired\" \"setHello\"\n@Bean\npublic class FeatBeanDemo {\n    @Autowired\n    private String hello;\n\n    public static void main(String[] args) {\n        Feat.cloudServer(opts -> opts.addExternalBean(\"hello\", \"你好~\")).listen();\n    }\n\n    public void setHello(String hello) {\n        this.hello = hello;\n    }\n}\n```\n## 3.2.3 @PostConstruct：初始化\n\n同 Spring 中的 `@PostConstruct` 注解，在 Bean 完成实例化和属性填充后被调用。\n```java \"@PostConstruct\"\n@Bean\npublic class FeatBeanDemo {\n    @Autowired\n    private String hello;\n\n    @PostConstruct\n    public void init() {\n        System.out.println(hello);\n    }\n\n    public static void main(String[] args) {\n        Feat.cloudServer(opts -> opts.addExternalBean(\"hello\", \"你好~\")).listen();\n    }\n\n    public void setHello(String hello) {\n        this.hello = hello;\n    }\n}\n```\n## 3.2.4 使用 Bean\n\n\n## 3.2.5 @PreDestroy：销毁\n@PreDestroy 作用于 Bean 或者 Controller 内部 public 方法上，类似于 Spring 中的 `@PreDestroy`。","src/content/docs/cloud/life_cycle.mdx","04ba793432033625","cloud/controller",{"id":140,"data":142,"body":148,"filePath":149,"digest":150,"deferredRender":16},{"title":143,"description":44,"editUrl":16,"head":144,"template":46,"sidebar":145,"pagefind":16,"draft":33},"3.4 Controller 开发 🔐",[],{"order":146,"hidden":33,"attrs":147},4,{},"import CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>","src/content/docs/cloud/controller.mdx","2316b3e88f05082c","cloud/options",{"id":151,"data":153,"body":158,"filePath":159,"digest":160,"deferredRender":16},{"title":154,"description":44,"editUrl":16,"head":155,"template":46,"sidebar":156,"pagefind":16,"draft":33},"3.3 CloudOptions 配置 🔐",[],{"order":104,"hidden":33,"attrs":157},{},"import CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>\n\nCloudOptions 定义了 Feat Cloud 服务的配置信息。\n\n## packages\n**类型**: `string[]`\n\n**默认值**: `null`\n\n定义了 Feat Cloud 启动时加载的实例包路径，默认扫描 classpath 下的所有实例包。\n\n## externalBeans\n**类型**: `Map\u003CString, Object>`\n\n**默认值**: `null`\n\n定义了 Feat Cloud 启动时加载的外部 Bean 配置。","src/content/docs/cloud/options.mdx","058ec0dcaa6ae567","server/upgrade_ws",{"id":161,"data":163,"body":169,"filePath":170,"digest":171,"deferredRender":16},{"title":164,"description":165,"editUrl":16,"head":166,"template":46,"sidebar":167,"pagefind":16,"draft":33},"2.5 升级 WebSocket 🔐","Feat WebSocket",[],{"order":125,"hidden":33,"attrs":168},{},"import upgrade_ws_1 from './img/upgrade_ws_1.png';\nimport CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>\n\nFeat 支持通过通过 **HttpRequest.upgrade** 方法将 HTTP 请求升级为 WebSocket。\n\n操作示例如下：\n```java title=WebSocketDemo.java \"upgrade\"\npublic class WebSocketDemo {\n    public static void main(String[] args) {\n        Feat.httpServer().httpHandler(request -> {\n            request.upgrade(new WebSocketUpgrade() {\n                @Override\n                public void handleTextMessage(WebSocketRequest request, WebSocketResponse response, String message) {\n                    response.sendTextMessage(\"接受到客户端消息：\" + message);\n                }\n            });\n        }).listen();\n    }\n}\n```\n\n启动程序后，可访问：\u003Ca target=\"_blank\" href=\"http://www.websocket-test.com/\">WebSocket 在线测试\u003C/a> 验证运行效果。\n\n\u003Cimg src={upgrade_ws_1.src} alt=\"hello world\" width=\"80%\" className=\"shadow\"/>\n\n## 2.5.1 构造方法\nWebSocketUpgrade 提供了两个构造方法，分别如下：\n\n```java\npublic WebSocketUpgrade() {\n    this(120000);\n}\n\npublic WebSocketUpgrade(long idleTimeout) {\n    this.idleTimeout = idleTimeout;\n}\n```\n用户可在进行 WebSocket 升级时，通过构造方法传入 **idleTimeout** 参数，设置 WebSocket 连接的空闲超时时间。\n其中无参构造方法默认设置空闲超时时间为 120000 毫秒，即：2 分钟。\n\n当 WebSocket 连接空闲时间超过 **idleTimeout** 时，Feat 会主动关闭该连接。\n\n## 2.5.2 消息处理\nWebSocketUpgrade 提供了两个消息处理方法，分别如下：\n```java\npublic void handle(WebSocketRequest request, WebSocketResponse response, CompletableFuture\u003CObject> completableFuture) throws Throwable {\n    try {\n        handle(request, response);\n    } finally {\n        completableFuture.complete(null);\n    }\n}\n\npublic void handle(WebSocketRequest request, WebSocketResponse response) throws Throwable {\n    ...\n}\n\n```\n如果用户需要采用异步方式处理 WebSocket 消息，可重写带 `CompletableFuture\u003CObject>` 入参的 **handle** 方法，并在异步处理完成后，调用 `completableFuture.complete(null)` 方法。\n\n若需要同步处理 WebSocket 消息，可重写 `handle(WebSocketRequest request, WebSocketResponse response) ` 方法。\n\n为便于开发人员使用，WebSocketUpgrade 已经默认实现了 `handle(WebSocketRequest request, WebSocketResponse response)` 方法，用户可按需重写相应的方法。\n\n```java \"handleTextMessage\" \"handleBinaryMessage\" \"onClose\" \"onError\" \"handlePing\" \"handlePong\" \"handleContinueMessage\"\npublic void handle(WebSocketRequest request, WebSocketResponse response) throws Throwable {\n    try {\n        switch (request.getFrameOpcode()) {\n            case WebSocketUtil.OPCODE_TEXT:\n                handleTextMessage(request, response, new String(request.getPayload(), StandardCharsets.UTF_8));\n                break;\n            case WebSocketUtil.OPCODE_BINARY:\n                handleBinaryMessage(request, response, request.getPayload());\n                break;\n            case WebSocketUtil.OPCODE_CLOSE:\n                try {\n                    onClose(request, response, new CloseReason(request.getPayload()));\n                } finally {\n                    response.close();\n                }\n                break;\n            case WebSocketUtil.OPCODE_PING:\n                handlePing(request, response);\n                break;\n            case WebSocketUtil.OPCODE_PONG:\n                handlePong(request, response);\n                break;\n            case WebSocketUtil.OPCODE_CONTINUE:\n                handleContinueMessage(request, response, request.getPayload());\n                break;\n            default:\n                throw new UnsupportedOperationException();\n        }\n    } catch (Throwable throwable) {\n        onError(request, throwable);\n    }\n}\n```\n\n## 2.5.3 请求路由\n在实际场景下，用户可能需要将不同的 WebSocket 消息路由到不同的处理方法，\n以及存在 Http 请求和 WebSocket 请求共存的情况。\n\n此时可以采用 `Router` 来实现请求路由，示例如下：\n```java title=WebSocketRouterDemo.java 'route(\"/ws1\"' 'route(\"/ws2\"' 'route(\"/http\"'\npublic class WebSocketRouterDemo {\n    public static void main(String[] args) {\n        Router router = new Router();\n        router.route(\"/ws1\", request -> {\n            request.upgrade(new WebSocketUpgrade() {\n                @Override\n                public void handleTextMessage(WebSocketRequest request, WebSocketResponse response, String message) {\n                    response.sendTextMessage(\"ws1接受到客户端消息：\" + message);\n                }\n            });\n        }).route(\"/ws2\", request -> {\n            request.upgrade(new WebSocketUpgrade() {\n                @Override\n                public void handleTextMessage(WebSocketRequest request, WebSocketResponse response, String message) {\n                    response.sendTextMessage(\"ws2接受到客户端消息：\" + message);\n                }\n            });\n        }).route(\"/http\", request -> {\n            request.getResponse().write(\"http\".getBytes());\n        });\n        Feat.httpServer().httpHandler(router).listen();\n    }\n}\n```","src/content/docs/server/upgrade_ws.mdx","8fbfd73ca5c1d710","server/upgrade_http2",{"id":172,"data":174,"filePath":181,"digest":182,"deferredRender":16},{"title":175,"description":176,"editUrl":16,"head":177,"template":46,"sidebar":178,"pagefind":16,"draft":33},"2.6 升级 Http2","Feat Http2",[],{"order":179,"hidden":33,"attrs":180},6,{},"src/content/docs/server/upgrade_http2.mdx","aa057b36138659c3","server/https",{"id":183,"data":185,"body":191,"filePath":192,"digest":193,"deferredRender":16},{"title":186,"description":187,"editUrl":16,"head":188,"template":46,"sidebar":189,"pagefind":16,"draft":33},"2.4 Https 服务 🔐","Feat Https",[],{"order":146,"hidden":33,"attrs":190},{},"import https_1 from './img/https_1.png';\nimport CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>\n出于安全服务需要，生产环境通常使用 Https 协议，Feat 也提供了相应的能力。\n\n下文演示所使用的证书是通过 [mkcert](https://github.com/FiloSottile/mkcert) 生成的自签名证书。\n\n## 2.4.1 生成 PEM 证书\n执行以下命令生成证书：\n```shell\nmkcert example.com \"*.example.com\" example.test localhost 127.0.0.1 ::1\n```\n如果控制台出现以下提示信息，则表示证书生成成功。\n```shell\nCreated a new certificate valid for the following names 📜\n - \"example.com\"\n - \"*.example.com\"\n - \"example.test\"\n - \"localhost\"\n - \"127.0.0.1\"\n - \"::1\"\n\nReminder: X.509 wildcards only go one level deep, so this won't match a.b.example.com ℹ️\n\nThe certificate is at \"./example.com+5.pem\" and the key at \"./example.com+5-key.pem\" ✅\n\nIt will expire on 30 April 2027\n```\n## 2.4.2 启动Https服务\n将证书文件 `example.com+5.pem` 和 `example.com+5-key.pem` 拷贝到项目的 `src/main/resources` 目录下。\n\n使用 smart-socket 提供的 SslPlugin 插件启动 Https 服务。\n```java title=\"HttpsPemDemo.java\" \"new SslPlugin(new PemServerSSLContextFactory(certPem, keyPem))\"\npublic class HttpsPemDemo {\n    public static void main(String[] args) throws Exception {\n        InputStream certPem = HttpsPemDemo.class.getClassLoader().getResourceAsStream(\"example.org.pem\");\n        InputStream keyPem = HttpsPemDemo.class.getClassLoader().getResourceAsStream(\"example.org-key.pem\");\n        SslPlugin sslPlugin = new SslPlugin(new PemServerSSLContextFactory(certPem, keyPem));\n        Feat.httpServer(opt -> opt.addPlugin(sslPlugin)).httpHandler(req -> {\n            req.getResponse().write(\"Hello Feat Https\");\n        }).listen();\n    }\n}\n```\n打开浏览器，访问：https://localhost:8080 ，若页面展示如下，说明 Https 服务启动成功。\n\u003Cimg src={https_1.src} alt=\"hello world\" width=\"60%\" className=\"shadow\"/>\n\n\n## 2.4.3 SSLEngine 传递\nHttpRequest 中提供了 `getSslEngine()` 方法，用于获取 SSLEngine。\n\n但是，SSLEngine 是在底层的网络通信层创建的，应用层无法感知底层是否使用了 SSL 协议。\n所以，默认情况下调用 `getSslEngine()` 方法获取到的 SSLEngine 为 null。\n\n若需要获取 SSLEngine，必须在 SslPlugin 中配置： **Consumer\\\u003CSSLEngine\\>**，\n将 `SSLEngine` 注入到 ThreadLocal 中以供应用层获取。\n```java title=HttpsSSLEngineDemo.java {6,7}\npublic class HttpsSSLEngineDemo {\n    public static void main(String[] args) throws Exception {\n        InputStream certPem = HttpsSSLEngineDemo.class.getClassLoader().getResourceAsStream(\"example.com+5.pem\");\n        InputStream keyPem = HttpsSSLEngineDemo.class.getClassLoader().getResourceAsStream(\"example.com+5-key.pem\");\n        SslPlugin sslPlugin = new SslPlugin(new PemServerSSLContextFactory(certPem, keyPem), (Consumer\u003CSSLEngine>) sslEngine -> {\n            sslEngine.setUseClientMode(false);\n            HttpRequest.SSL_ENGINE_THREAD_LOCAL.set(sslEngine);\n        });\n        Feat.httpServer(opt -> opt.addPlugin(sslPlugin)).httpHandler(req -> {\n            SSLEngine engine = req.getSslEngine();\n            if (engine == null) {\n                req.getResponse().write(\"engine is null\");\n            } else {\n                req.getResponse().write(\"engine=\" + engine);\n            }\n        }).listen();\n    }\n}\n```\nTCP 连接建立成功后，应用层`Endpoint.java`会在第一时间获取 `SSLEngine`。\n```java title=Endpoint.java {4-6}\nprotected Endpoint(AioSession aioSession, ServerOptions options) {\n    this.aioSession = aioSession;\n    this.options = options;\n    this.sslEngine = HttpRequest.SSL_ENGINE_THREAD_LOCAL.get();\n    if (sslEngine != null) {\n        HttpRequest.SSL_ENGINE_THREAD_LOCAL.remove();\n    }\n}\n```","src/content/docs/server/https.mdx","cceca2fe97eca57e","unstar",{"id":194,"data":196,"body":202,"filePath":203,"digest":204,"deferredRender":16},{"title":197,"description":198,"editUrl":16,"head":199,"template":46,"sidebar":200,"pagefind":16,"draft":33},"支持一下","Feat unStar",[],{"hidden":33,"attrs":201},{},"import start from './img/start.png';\n\n开源不易，请为 Feat 点一个 **[⭐️ Star](https://gitee.com/smartboot/feat)** 以解锁本文访问权限。\n\n\u003Cimg src={start.src} alt=\"hello world\" width=\"100%\" className=\"shadow\"/>","src/content/docs/unstar.mdx","579966eea34f8f6d","auth",{"id":205,"data":207,"body":213,"filePath":214,"digest":215,"deferredRender":16},{"title":208,"description":209,"editUrl":16,"head":210,"template":46,"sidebar":211,"pagefind":16,"draft":33},"授权提示","Feat unAuth",[],{"hidden":33,"attrs":212},{},"本文仅面向 Feat 授权企业开放，授权企业可免费获得 **5** 个名额的文档永久访问权限。\n\n超过名额限制的可按每人 **299元/年** 进行付费购买。\n\n\n如需申请企业授权，请添加微信（备注：`Feat咨询`）\n\n\u003Cimg src=\"https://smartboot.tech/img/qrcode/personal_wx.png\" alt=\"hello world\" width=\"40%\" className=\"shadow\"/>","src/content/docs/auth.mdx","06ee9bfae0929684","client/http_client",{"id":216,"data":218,"body":224,"filePath":225,"digest":226,"deferredRender":16},{"title":219,"description":220,"editUrl":16,"head":221,"template":46,"sidebar":222,"pagefind":16,"draft":33},"4.1 HttpClient详解 🔐","Feat Client",[],{"order":48,"hidden":33,"attrs":223},{},"import CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>\n\nFeat HttpClient 是一个功能强大、灵活且高效的 HTTP 客户端库，旨在帮助开发者轻松发送 HTTP 请求、处理响应，并支持多种高级功能。它支持常见的 HTTP 方法（如 GET、POST、PUT、DELETE 等），并提供了灵活的配置选项，以满足不同场景下的需求。\n\nFeat HttpClient 的设计理念注重性能、易用性和扩展性，能够与 Feat 框架的其他组件无缝集成，为开发者提供一致的开发体验。\n\n## 4.1.1 快速上手\n\n### 4.1.1.1 引入依赖\n\n在 Maven 项目中，添加以下依赖到 `pom.xml`：\n\n```xml\n\u003Cdependency>\n    \u003CgroupId>tech.smartboot.feat\u003C/groupId>\n    \u003CartifactId>feat-core\u003C/artifactId>\n    \u003Cversion>${feat.version}\u003C/version>\n\u003C/dependency>\n```\n\n### 4.1.1.2 发送第一个 GET 请求\n\n以下是一个简单的示例，展示了如何使用 Feat HttpClient 发送 GET 请求并处理响应：\n\n```java\nimport tech.smartboot.feat.core.client.HttpClient;\nimport java.io.IOException;\n\npublic class HttpClientDemo {\n    public static void main(String[] args) throws IOException {\n        // 创建 HttpClient 实例\n        HttpClient client = new HttpClient(\"https://www.baidu.com\");\n\n        // 发送 GET 请求\n        client.get().onSuccess(response -> {\n            // 处理响应\n            System.out.println(\"Status Code: \" + response.statusCode());\n            System.out.println(\"Body: \" + response.body());\n        }).done();\n    }\n}\n```\n\n---\n\n## 4.1.2 HttpClient 实例化\nHttpClient 提供了 2 种实例化方式：\n\n**方式一：完整的请求URL**\n```java\nHttpClient client = new HttpClient(\"http://127.0.0.1:8080\");\n\nHttpClient client = new HttpClient(\"https://smartboot.tech/feat/\");\n```\n该种方式会自动解析 URL 中的 host 和 port 信息，并识别是否使用 HTTPS 协议。\n\n**方式二：指定 host、port**\n```java\nHttpClient httpClient = new HttpClient(\"127.0.0.1\", 8080);\n\nHttpClient httpClient = new HttpClient(\"smartboot.tech\", 443);\n```\n\n\n## 4.1.3 Options 配置\n通过 HttpClient.options() 方法提供了客户端的配置选项，支持链式调用。\n### host\n**类型:** `String`\n\n**默认值:** `null`\n\n服务地址，必填\n\n### port\n**类型:** `int`\n\n**默认值:** `80`\n\n服务端口\n\n\n### connectTimeout\n**类型:** `int`\n\n**默认值:** `0`\n\n连接超时时间，单位毫秒\n\n### readBufferSize\n**类型:** `int`\n\n**默认值:** `1024`\n\n读缓冲区大小，单位：字节。合理的大小可以减少系统调用次数，提高性能。\n\n### writeBufferSize\n**类型:** `int`\n\n**默认值:** `1024`\n\n写缓冲区大小，单位：字节。合理的大小可以减少系统调用次数，提高性能。\n\n### debug\n**类型:** `boolean`\n\n**默认值:** `false`\n\n是否开启调试模式。启用后会在控制台打印请求和响应的详细信息。\n\n### proxy\n**类型:** `ProxyOptions`\n\n**默认值:** `null`\n\n代理配置。\n\n## 4.1.4 HTTP请求\nHttpClient 提供了 rest() 方法用于发送通用的 HTTP 请求。rest() 方法的参数包括：\n- method: HTTP 请求方法，如 GET、POST、PUT、DELETE 等。\n- path: 请求路径，如 /api/user。\n\n请求构造完毕后，需要调用 submit() 方法发送请求。\n\n```java title=HttpRestDemo.java \"rest\" \"HttpMethod.GET\" \"submit\"\npublic class HttpRestDemo {\n    public static void main(String[] args) throws IOException {\n        // 创建 HttpClient 实例\n        HttpClient client = new HttpClient(\"https://smartboot.tech\");\n        client.options().debug(true);\n        // 发送 GET 请求\n        client.rest(HttpMethod.GET, \"/feat/\").onSuccess(response -> {\n            System.out.println(\"Status Code: \" + response.statusCode());\n            System.out.println(\"Body: \" + response.body());\n        }).submit();\n    }\n}\n```\n\n对于 GET、POST 等常见的 HTTP 请求方法，HttpClient 提供了对应的方法，如 get()、post() 等，例如：\n```java title=HttpGetDemo.java \"get\" \"submit\"\npublic class HttpGetDemo {\n    public static void main(String[] args) {\n        HttpClient httpClient = new HttpClient(\"https://smartboot.tech\");\n        httpClient.get(\"/feat/\")\n                .onSuccess(response -> System.out.println(response.body()))\n                .onFailure(Throwable::printStackTrace)\n                .submit();\n    }\n}\n```\n\n## 4.1.5 异步回调\nHttpClient 提供了异步回调机制，可以在请求发送后立即返回，而不需要等待请求完成。\n\n### 4.1.5.1 onResponseHeader\n当响应 Header 解析完成后，会触发 onResponseHeader 回调。\n```java title=ResponseHeaderDemo.java \"onResponseHeader\"\npublic class ResponseHeaderDemo {\n    public static void main(String[] args) {\n        HttpClient httpClient = new HttpClient(\"https://smartboot.tech\");\n        httpClient.get(\"/feat/\")\n                .onResponseHeader(response -> {\n                    for (String name : response.getHeaderNames()) {\n                        System.out.println(name + \": \" + response.getHeader(name));\n                    }\n                })\n                .submit();\n    }\n}\n```\n\n### 4.1.5.2 onResponseBody\n对于存在响应体的请求，当`onResponseHeader`回调结束并开始接收到Body内容时，会触发 onResponseBody 回调。\n```java title=ResponseBodyDemo.java \"onResponseBody\"\npublic class ResponseBodyDemo {\n    public static void main(String[] args) {\n        HttpClient httpClient = new HttpClient(\"https://smartboot.tech\");\n        httpClient.get(\"/feat/\")\n                .onResponseBody(new Stream() {\n                    @Override\n                    public void stream(HttpResponse response, byte[] bytes, boolean end) throws IOException {\n                        System.out.println(\"接收到数据：\" + new String(bytes));\n                        if (end) {\n                            System.out.println(\"数据接收完毕\");\n                        }\n                    }\n                })\n                .submit();\n    }\n}\n```\nonResponseBody 的参数是一个 Stream 对象，用于消费响应体的内容：\n- response: HttpResponse 对象，表示当前的响应。\n- bytes: 字节数组，表示接收到的响应体内容。\n- end: boolean 值，表示是否接收到了响应体的最后一部分内容。\n### 4.1.5.3 onSuccess\n当请求成功时，会触发 onSuccess 回调。该回调发生于 onResponseBody 正常结束之后。\n### 4.1.5.4 onFailure\n当请求失败时，会触发 onFailure 回调。","src/content/docs/client/http_client.mdx","dfbf5d983f756720","client/ws_client",{"id":227,"data":229,"body":234,"filePath":235,"digest":236,"deferredRender":16},{"title":230,"description":220,"editUrl":16,"head":231,"template":46,"sidebar":232,"pagefind":16,"draft":33},"4.2 WebSocket详解 🔐",[],{"order":59,"hidden":33,"attrs":233},{},"import CheckAuthorize from '../../../components/CheckAuthorize.astro'\n\n\u003CCheckAuthorize/>\n随着 Web 技术的快速发展，WebSocket 已经成为实时通信应用的首选技术。它能够实现浏览器与服务器之间的全双工通信，适用于实时聊天、在线游戏、股票交易、物联设备控制等场景。\n\nWebSocketClient 是 Feat 框架中的一款高性能 WebSocket 客户端实现，旨在为开发者提供灵活、高效、易用的 WebSocket 开发体验。\n\n本文将详细介绍 Feat WebSocketClient 的功能、核心接口以及使用方法。\n\n---\n\n## 1. 核心功能\n\nFeat WebSocketClient 提供了以下核心功能：\n\n1. **WebSocket 连接管理**：\n- 支持 WebSocket 协议（ws:// 和 wss://）。\n- 支持连接建立、断开、重连等生命周期管理。\n- 提供连接状态监控和事件通知。\n\n2. **消息传输**：\n- 支持文本消息（String）和二进制消息（byte[]）的发送与接收。\n- 支持消息的异步处理，避免阻塞主线程。\n\n3. **事件监听**：\n- 提供 `onOpen`（连接成功）、`onClose`（连接关闭）、`onError`（发生错误）、`onMessage`（接收消息）等事件回调，方便开发者处理各种场景。\n\n4. **配置灵活**：\n- 支持设置连接超时、读写缓冲区大小、代理配置等。\n- 支持自定义 SSL/TLS 配置，满足安全通信需求。\n\n---\n\n## 2. 核心接口\n\nFeat WebSocketClient 的核心接口包括以下几个部分：\n\n### 2.1 WebSocketClient 类\n\n`WebSocketClient` 是客户端的主要入口类，提供了以下核心方法：\n\n- **构造方法**：\n```java\npublic WebSocketClient(String url)\n  ```\n使用 WebSocket URL 初始化客户端实例，支持 `ws://` 和 `wss://` 协议。\n\n- **配置方法**：\n```java\npublic WebSocketOptions options()\n  ```\n获取配置对象，用于设置客户端的各项参数，如超时时间、读写缓冲区大小、代理等。\n\n- **连接方法**：\n```java\npublic void connect(WebSocketListener listener)\n  ```\n使用指定的监听器建立 WebSocket 连接。\n\n- **发送消息**：\n```java\npublic void sendMessage(String message) throws IOException\npublic void sendBinary(byte[] bytes) throws IOException\n  ```\n发送文本消息或二进制消息。\n\n- **关闭连接**：\n```java\npublic void close()\n  ```\n关闭 WebSocket 连接。\n\n### 2.2 WebSocketListener 接口\n\n`WebSocketListener` 是事件监听接口，定义了以下方法：\n\n- **onOpen**：\n```java\nvoid onOpen(WebSocketClient client, WebSocketResponse response)\n  ```\n连接成功时触发。\n\n- **onClose**：\n```java\nvoid onClose(WebSocketClient client, WebSocketResponse response, CloseReason reason)\n  ```\n连接关闭时触发。\n\n- **onError**：\n```java\nvoid onError(WebSocketClient client, WebSocketResponse response, Throwable throwable)\n  ```\n发生错误时触发。\n\n- **onMessage**：\n```java\nvoid onMessage(WebSocketClient client, String message)\nvoid onMessage(WebSocketClient client, byte[] message)\n  ```\n接收到文本消息或二进制消息时触发。\n\n### 2.3 WebSocketOptions 类\n\n`WebSocketOptions` 提供了丰富的配置选项，包括：\n\n- **设置连接超时**：\n```java\npublic WebSocketOptions connectTimeout(int connectTimeout)\n  ```\n\n- **设置代理**：\n```java\npublic WebSocketOptions proxy(String host, int port, String username, String password)\n  ```\n\n- **设置读写缓冲区大小**：\n```java\npublic WebSocketOptions readBufferSize(int readBufferSize)\npublic WebSocketOptions writeBufferSize(int writeBufferSize)\n  ```\n\n- **启用调试模式**：\n```java\npublic WebSocketOptions debug(boolean debug)\n  ```\n\n---\n\n## 3. 使用示例\n\n### 3.1 基本用法\n\n以下是一个简单的示例，展示了如何使用 Feat WebSocketClient 连接 WebSocket 服务器并处理消息：\n\n```java\nimport tech.smartboot.feat.core.client.WebSocketClient;\nimport tech.smartboot.feat.core.client.WebSocketListener;\nimport tech.smartboot.feat.core.client.WebSocketResponse;\n\npublic class WebSocketDemo {\n    public static void main(String[] args) {\n        WebSocketClient client = new WebSocketClient(\"ws://localhost:8080/ws\");\n        client.options().debug(true); // 开启调试模式\n\n        client.connect(new WebSocketListener() {\n            @Override\n            public void onOpen(WebSocketClient client, WebSocketResponse response) {\n                System.out.println(\"WebSocket 连接成功\");\n                try {\n                    client.sendMessage(\"Hello Feat WebSocket\");\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onMessage(WebSocketClient client, String message) {\n                System.out.println(\"接收到消息：\" + message);\n            }\n\n            @Override\n            public void onClose(WebSocketClient client, WebSocketResponse response, CloseReason reason) {\n                System.out.println(\"WebSocket 连接关闭，关闭原因：\" + reason);\n            }\n\n            @Override\n            public void onError(WebSocketClient client, WebSocketResponse response, Throwable throwable) {\n                System.out.println(\"发生错误：\" + throwable.getMessage());\n            }\n        });\n    }\n}\n```\n\n### 3.2 高级配置\n\n如果需要自定义连接参数，可以通过 `WebSocketOptions` 进行配置：\n\n```java\nWebSocketClient client = new WebSocketClient(\"wss://example.com/ws\");\nWebSocketOptions options = client.options();\noptions.connectTimeout(5000) // 设置连接超时时间为 5 秒\n       .readBufferSize(8192) // 设置读缓冲区大小为 8 KB\n       .proxy(\"proxy.example.com\", 8080, \"user\", \"password\") // 设置代理服务器\n       .debug(true); // 开启调试模式\n\nclient.connect(listener);\n```\n\n---\n\n## 4. 性能与扩展性\n\n### 4.1 高性能\n\nFeat WebSocketClient 基于 Feat 框架的高性能网络通信能力，能够支持大规模的并发连接和高频率的消息传输。通过合理配置读写缓冲区大小和线程池，可以进一步提升性能。\n\n### 4.2 灵活性\n\nFeat WebSocketClient 支持自定义 SSL/TLS 配置，适用于需要安全通信的场景。同时，通过 `WebSocketListener` 接口，开发者可以灵活地定义消息处理逻辑。\n\n### 4.3 线程安全\n\nFeat WebSocketClient 的设计充分考虑了线程安全问题，保证在高并发场景下的稳定性。\n\n---\n\n## 5. 总结\n\nFeat WebSocketClient 是一款功能丰富、性能优越的 WebSocket 客户端实现，能够满足大多数实时通信场景的需求。通过简单的 API 和灵活的配置选项，开发者可以快速构建高效的 WebSocket 应用。\n\n如果你正在寻找一款高性能、易用的 WebSocket 客户端，Feat WebSocketClient 是一个值得考虑的选择。","src/content/docs/client/ws_client.mdx","fb5d0a2abdb37279","ai/about",{"id":237,"data":239,"body":245,"filePath":246,"digest":247,"deferredRender":16},{"title":240,"description":241,"editUrl":16,"head":242,"template":46,"sidebar":243,"pagefind":16,"draft":33},"5.1 关于","Feat AI",[],{"order":48,"hidden":33,"attrs":244},{},"Feat AI 是一个功能强大、灵活且高效的智能对话框架，旨在帮助开发者轻松集成和使用各种智能对话模型。它支持多种模型和自定义配置，提供了丰富的 API 接口，方便用户快速构建智能对话应用。\n\n## 核心功能\n\nFeat AI 提供了以下核心功能：\n\n1. **多模型支持**\n支持多种智能对话模型，如 DeepSeek-R1、Qwen2.5-72B 等，适用于不同的应用场景。\n\n2. **灵活配置**\n允许用户自定义 API 配置，如模型选择、API 密钥、系统提示等，满足个性化需求。\n\n3. **异步处理**\n支持异步回调机制，提升应用性能，避免阻塞主线程。\n\n4. **流式响应**\n支持流式响应，实时接收模型输出，适用于需要即时反馈的场景。\n\n## 关键接口\n\n### FeatAI 类\n\n`FeatAI` 是框架的入口类，用于创建 `ChatModel` 实例。通过 `chatModel` 方法，用户可以配置客户端选项并创建对话模型实例。\n\n```java\npublic static ChatModel chatModel(Consumer\u003COptions> consumer)\n```\n\n- **参数**：`Consumer\u003COptions>` 用于配置客户端选项。\n- **返回值**：`ChatModel` 实例，用于发送和处理聊天请求。\n\n### Options 类\n\n`Options` 类提供了丰富的配置选项，允许用户自定义模型的行为和环境。\n\n- **baseUrl**：设置模型的基 URL。\n- **model**：选择具体的模型。\n- **apiKey**：配置 API 密钥。\n- **system**：设置系统提示，指导模型的行为。\n- **debug**：启用调试模式，打印详细的请求和响应信息。\n\n### ModelMeta 类\n\n`ModelMeta` 类定义了预设的模型及其元数据，用户可以通过这些静态常量选择不同的模型。\n\n```java\npublic static final ModelMeta GITEE_AI_DeepSeek_R1 = new ModelMeta(Options.AI_VENDOR_GITEE, \"DeepSeek-R1\", false);\n```\n\n- **vendor**：模型的供应商。\n- **model**：模型的名称。\n- **toolSupport**：是否支持工具调用。\n\n### ChatModel 类\n\n`ChatModel` 是发送和处理聊天请求的核心类，提供了以下方法：\n\n- **chat**：发送同步聊天请求。\n- **chatStream**：发送异步流式聊天请求。\n- **onSuccess**：处理成功的响应。\n- **onFailure**：处理失败的响应。\n\n## 快速上手\n\n### 初始化和配置\n\n```java\nimport tech.smartboot.feat.ai.FeatAI;\nimport tech.smartboot.feat.ai.ModelMeta;\nimport tech.smartboot.feat.ai.chat.ChatModel;\n\npublic class ChatDemo {\n    public static void main(String[] args) {\n        // 创建 ChatModel 实例\n        ChatModel chatModel = FeatAI.chatModel(opts -> {\n            opts.model(ModelMeta.GITEE_AI_DeepSeek_R1)\n                .system(\"你是一个乐于助人的助手。\")\n                .debug(true);\n        });\n    }\n}\n```\n\n### 发送同步请求\n\n```java\nchatModel.chat(\"你好，请自我介绍一下。\", rsp -> {\n    System.out.println(\"rsp: \" + rsp.getContent());\n    System.out.println(\"usage: \" + rsp.getUsage());\n});\n```\n\n### 发送异步请求\n\n```java\nchatModel.chatStream(\"你好，请自我介绍一下。\", new StreamResponseCallback() {\n    @Override\n    public void onStreamResponse(String content) {\n        System.out.println(\"Streaming response: \" + content);\n    }\n\n    @Override\n    public void onCompletion(ResponseMessage responseMessage) {\n        System.out.println(\"Response completed.\");\n    }\n\n    @Override\n    public void onFailure(Throwable throwable) {\n        System.out.println(\"Error: \" + throwable.getMessage());\n    }\n});\n```\n\n## 总结\n\nFeat AI 是一个功能丰富、性能优越的智能对话框架，能够满足多种实时通信场景的需求。通过简单的 API 和灵活的配置选项，开发者可以快速构建高效的智能对话应用。其高性能、易用性和扩展性使其成为智能对话开发的理想选择。\n\n## 应用场景\n\n- **智能客服**：实时回答用户问题，提升客户满意度。\n- **虚拟助手**：帮助用户完成日常任务，提高效率。\n- **内容生成**：生成高质量的文章、报告等文本内容。","src/content/docs/ai/about.mdx","29630775a3fb8d20","ai/embedding",{"id":248,"data":250,"body":255,"filePath":256,"digest":257,"deferredRender":16},{"title":251,"description":241,"editUrl":16,"head":252,"template":46,"sidebar":253,"pagefind":16,"draft":33},"5.2 Embedding",[],{"order":59,"hidden":33,"attrs":254},{},"随着人工智能技术的飞速发展，文本嵌入（Text Embedding）已经成为自然语言处理（NLP）中的基础且重要的技术。文本嵌入通过将文本转换为高维向量，使得计算机能够理解文本的语义信息。\n\nFeat 提供了强大的嵌入式（Embedding）功能，支持多种预训练模型和自定义模型，能够将文本转换为高维向量表示，广泛应用于文本相似度计算、语义检索等场景。\n\n本教程将详细介绍如何使用 Feat 的 AI 嵌入功能，包括基本使用、高级配置以及与向量数据库的结合。\n\n---\n\n## 5.2.1 基本使用\n\n### 1. 单句嵌入\n\n```java\n// 加载 Gitee AI 的 bce-embedding-base_v1 模型\nEmbeddingModel embeddingModel = FeatAI.embedding(opt ->\n    opt.model(ModelVendor.GITEE_AI_BCE_BASE_V1)\n);\n\n// 对单句文本进行嵌入\nfloat[] embedding = embeddingModel.embed(\"你好！\");\nSystem.out.println(Arrays.toString(embedding));\n```\n\n**说明：**\n- `ModelVendor.GITEE_AI_BCE_BASE_V1`：使用 Gitee AI 提供的预训练嵌入模型\n- `embed` 方法返回一个浮点数数组，表示文本的高维向量表示\n- 输出结果为一个长度为 768 的向量\n\n### 2. 多句嵌入\n\n```java\nEmbeddingModel embeddingModel = FeatAI.embedding(opt ->\n    opt.model(ModelVendor.GITEE_AI_BGE_LARGE_ZH_V1_5)\n);\n\nList\u003Cfloat[]> embeddings = embeddingModel.embed(Arrays.asList(\n    \"Hello World\",\n    \"你好\"\n));\n\nembeddings.forEach(embed -> System.out.println(Arrays.toString(embed)));\n```\n\n**说明：**\n- 支持批量处理多句文本\n- 每个句子都会被转换为固定长度的向量表示\n- 返回结果为 `List\u003Cfloat[]>` 类型，每个元素对应一个句子的向量表示\n\n\n## 5.2.2 模型选择\n\nFeat 支持多种预训练嵌入模型，用户可以根据需求选择合适的模型：\n\n### 1. Gitee AI 模型\n\n```java\n// 使用 Gitee AI 的不同模型\nEmbeddingModel bceBaseModel = FeatAI.embedding(opt ->\n    opt.model(ModelVendor.GITEE_AI_BCE_BASE_V1)  // 基础版模型\n);\n\nEmbeddingModel bgeSmallModel = FeatAI.embedding(opt ->\n    opt.model(ModelVendor.GITEE_AI_BGE_SMALL_ZH_V1_5)  // 小型中文模型\n);\n\nEmbeddingModel bgeLargeModel = FeatAI.embedding(opt ->\n    opt.model(ModelVendor.GITEE_AI_BGE_LARGE_ZH_V1_5)  // 大型中文模型\n);\n```\n\n### 2. Ollama 模型\n\n```java\n// 使用 Ollama 本地服务\nEmbeddingModel ollamaModel = FeatAI.embedding(opt -> {\n    opt.baseUrl(\"http://localhost:11434/v1\")  // Ollama 服务地址\n        .model(ModelVendor.Ollama.nomic_embed_text);  // 使用 nomic-embed-text 模型\n});\n\nList\u003Cfloat[]> embeddings = ollamaModel.embed(Arrays.asList(\n    \"Hello World\",\n    \"你好\"\n));\n```\n\n**说明：**\n- 需要先启动 Ollama 服务\n- `nomic_embed_text` 是一个高性能的开源嵌入模型\n- 支持多种模型选择，具体模型列表可参考 ModelVendor 接口\n\n### 3. 自定义模型\n\n```java\n// 使用自定义模型\nEmbeddingModel customModel = FeatAI.embedding(opt -> {\n    opt.baseUrl(\"http://your-model-server/v1\")  // 自定义模型服务地址\n        .model(\"your-model-name\")  // 自定义模型名称\n        .apiKey(\"your-api-key\");  // 如果需要认证\n});\n```\n\n## 5.2.3 使用示例\n### 1. 与 Chroma 集成\n```java\n// 使用 Chroma 进行向量存储和检索\nChroma chroma = new Chroma(\"http://localhost:8000\", opt -> {\n    opt.debug(true)\n        .embeddingModel(FeatAI.embedding(embedOpt -> {\n            embedOpt.baseUrl(\"http://localhost:11434/v1\")  // Ollama 服务地址\n                .model(ModelVendor.Ollama.nomic_embed_text)  // 使用 nomic-embed-text 模型\n                .debug(true);\n        }));\n});\n\n// 创建集合\nCollection collection = chroma.createCollection(\"my_collection\");\n\n// 添加文档\nList\u003CDocument> documents = Arrays.asList(\n    new Document(\"1\", \"Hello World\"),\n    new Document(\"2\", \"你好\")\n);\ncollection.add(documents);\n\n// 查询\nQuery query = new Query();\nquery.setQueryTexts(Arrays.asList(\"Hello\"));\nquery.setInclude(Arrays.asList(\"metadatas\", \"documents\", \"distances\"));\ncollection.query(query);\n```\n\n**说明：**\n- Chroma 是一个开源的向量数据库，支持高效的向量存储和检索\n- 可通过 Chroma 进行大规模文本的语义检索\n- 支持自定义嵌入模型\n\n### 2. 文本相似度计算\n\n将文本嵌入到向量空间后，可以计算文本之间的相似度，用于推荐系统、问答系统等场景。\n\n```java\nimport tech.smartboot.feat.ai.FeatAI;\nimport tech.smartboot.feat.ai.embedding.ModelVendor;\nimport java.util.Arrays;\n\npublic class TextSimilarityExample {\n    public static void main(String[] args) {\n        var embeddingModel = FeatAI.embedding(opt -> opt.model(ModelVendor.GITEE_AI_BCE_BASE_V1));\n\n        float[] embedding1 = embeddingModel.embed(\"你好！\");\n        float[] embedding2 = embeddingModel.embed(\"您好！\");\n\n        // 计算余弦相似度\n        double similarity = cosineSimilarity(embedding1, embedding2);\n        System.out.println(\"文本相似度: \" + similarity);\n    }\n\n    private static double cosineSimilarity(float[] a, float[] b) {\n        double dotProduct = 0.0;\n        double normA = 0.0;\n        double normB = 0.0;\n\n        for (int i = 0; i \u003C a.length; i++) {\n            dotProduct += a[i] * b[i];\n            normA += Math.pow(a[i], 2);\n            normB += Math.pow(b[i], 2);\n        }\n\n        return dotProduct / (Math.sqrt(normA) * Math.sqrt(normB));\n    }\n}\n```\n\n### 3. 文本分类\n\n通过嵌入向量，可以将文本映射到特定的类别，用于分类任务。\n\n```java\nimport tech.smartboot.feat.ai.FeatAI;\nimport tech.smartboot.feat.ai.embedding.ModelVendor;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class TextClassificationExample {\n    public static void main(String[] args) {\n        var embeddingModel = FeatAI.embedding(opt -> opt.model(ModelVendor.GITEE_AI_BCE_BASE_V1));\n\n        List\u003CString> texts = Arrays.asList(\n            \"机器学习是人工智能的一部分。\",\n            \"深度学习是一种机器学习方法。\",\n            \"自然语言处理是计算机科学的一个领域。\"\n        );\n\n        List\u003CString> categories = Arrays.asList(\"技术\", \"技术\", \"计算机科学\");\n\n        // 假设我们有一个分类器，根据嵌入向量进行分类\n        List\u003CString> predictedCategories = classify(embeddingModel.embed(texts));\n\n        for (int i = 0; i \u003C texts.size(); i++) {\n            System.out.println(\"文本: \" + texts.get(i));\n            System.out.println(\"实际类别: \" + categories.get(i));\n            System.out.println(\"预测类别: \" + predictedCategories.get(i));\n            System.out.println(\"--------------------\");\n        }\n    }\n\n    // 简单的分类器示例\n    private static List\u003CString> classify(List\u003Cfloat[]> embeddings) {\n        // 这里只是一个示例，实际分类器需要根据具体业务逻辑实现\n        return Arrays.asList(\"技术\", \"技术\", \"计算机科学\");\n    }\n}\n```\n\n## 5.2.4 注意事项\n\n1. **模型选择**：\n- 不同模型的性能和适用场景不同，需根据具体需求选择\n- 预训练模型通常已经过良好训练，适合大多数场景\n\n2. **性能优化**：\n- 批量处理可以显著提高性能\n- 注意内存使用，避免一次性处理过多数据\n\n3. **错误处理**：\n- 嵌入模型调用可能抛出异常，需添加 try-catch 处理\n- 检查 API 返回状态码，处理可能的错误情况\n\n4. **安全性**：\n- 敏感信息如 API 密钥需妥善保管\n- 生产环境建议使用 HTTPS 传输\n\n---\n\n通过以上教程，您可以快速上手 Feat 的嵌入式功能，体验其强大能力。如需更深入了解，可以参考相关 API 文档或联系技术支持。","src/content/docs/ai/embedding.mdx","8281bc70a8837dcc","ai/chroma",{"id":258,"data":260,"body":265,"filePath":266,"digest":267,"deferredRender":16},{"title":261,"description":241,"editUrl":16,"head":262,"template":46,"sidebar":263,"pagefind":16,"draft":33},"5.3 向量数据库-Chroma",[],{"order":104,"hidden":33,"attrs":264},{},"Chroma 是一个开源的向量数据库，支持高效存储和检索高维向量数据。\n在 Feat 项目中，Chroma 被集成到 `VectorStore` 组件中，提供了与 Chroma 服务交互的能力。\n本教程将详细介绍如何在 Feat 中使用 Chroma 进行向量数据的管理。\n\n---\n\n\n## 1. 安装和配置\n\n### 1.1 安装 Chroma 服务\n\n首先，需要安装并运行 Chroma 服务。你可以通过以下命令启动 Chroma：\n\n```bash\ndocker run -p 8000:8000 -p 8001:8001 chromaai/chroma:latest\n```\n\n启动后，Chroma 服务将运行在 `http://localhost:8000`。\n\n### 1.2 配置 Feat 连接 Chroma\n\n在 Feat 中，通过 `ChromaVectorStore` 类连接到 Chroma 服务。以下是一个基本配置示例：\n\n```java\nimport tech.smartboot.feat.ai.vector.ChromaVectorStore;\nimport tech.smartboot.feat.ai.vector.Document;\nimport tech.smartboot.feat.ai.vector.SearchRequest;\nimport tech.smartboot.feat.ai.vector.VectorStore;\nimport tech.smartboot.feat.ai.vector.chroma.ChromaVectorOptions;\n\npublic class ChromaConfig {\n    public static void main(String[] args) {\n        // 创建 ChromaVectorStore 实例\n        VectorStore vectorStore = ChromaVectorStore.chroma(opt -> {\n            opt.setUrl(\"http://localhost:8000\")  // Chroma 服务地址\n               .collectionName(\"my_collection\")  // 向量集合名称\n               .debug(true);                     // 开启调试模式\n        });\n\n        // 创建文档对象\n        Document document = new Document();\n        document.setId(\"1\");\n        document.setDocument(\"hello world\");  // 文本内容\n        document.setMetadata(Collections.singletonMap(\"name\", \"sndao\"));  // 元数据\n\n        // 添加文档到集合\n        vectorStore.add(Collections.singletonList(document));\n    }\n}\n```\n\n---\n\n## 2. 创建和管理数据库\n\n### 2.1 创建数据库\n\n在 Chroma 中，数据库是数据存储的顶层单位。以下是如何通过 Feat 创建数据库的示例：\n\n```java\nimport tech.smartboot.feat.ai.vector.chroma.Chroma;\n\npublic class CreateDatabase {\n    public static void main(String[] args) {\n        Chroma chroma = new Chroma(\"http://localhost:8000\", opt -> opt.debug(true));\n        chroma.createDatabase(\"my_database\");\n        System.out.println(\"Database created successfully\");\n    }\n}\n```\n\n### 2.2 获取数据库信息\n\n```java\nimport tech.smartboot.feat.ai.vector.chroma.Chroma;\n\npublic class GetDatabase {\n    public static void main(String[] args) {\n        Chroma chroma = new Chroma(\"http://localhost:8000\", opt -> opt.debug(true));\n        String databaseInfo = chroma.getDatabase(\"my_database\");\n        System.out.println(\"Database info: \" + databaseInfo);\n    }\n}\n```\n\n### 2.3 删除数据库\n\n```java\nimport tech.smartboot.feat.ai.vector.chroma.Chroma;\n\npublic class DeleteDatabase {\n    public static void main(String[] args) {\n        Chroma chroma = new Chroma(\"http://localhost:8000\", opt -> opt.debug(true));\n        chroma.deleteDatabase(\"my_database\");\n        System.out.println(\"Database deleted successfully\");\n    }\n}\n```\n\n---\n\n## 3. 创建和管理集合\n\n### 3.1 创建集合\n\n在 Chroma 中，集合是存储向量数据的基本单位。以下是如何创建集合的示例：\n\n```java\nimport tech.smartboot.feat.ai.vector.chroma.Chroma;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CreateCollection {\n    public static void main(String[] args) {\n        Chroma chroma = new Chroma(\"http://localhost:8000\", opt -> opt.debug(true));\n        Map\u003CString, String> metadata = new HashMap\u003C>();\n        metadata.put(\"description\", \"My test collection\");\n\n        Collection collection = chroma.createCollection(\"my_collection\", metadata);\n        System.out.println(\"Collection created: \" + collection.getName());\n    }\n}\n```\n\n### 3.2 获取集合信息\n\n```java\nimport tech.smartboot.feat.ai.vector.chroma.Chroma;\n\npublic class GetCollection {\n    public static void main(String[] args) {\n        Chroma chroma = new Chroma(\"http://localhost:8000\", opt -> opt.debug(true));\n        Collection collection = chroma.getCollection(\"my_collection\");\n        System.out.println(\"Collection name: \" + collection.getName());\n    }\n}\n```\n\n### 3.3 删除集合\n\n```java\nimport tech.smartboot.feat.ai.vector.chroma.Chroma;\n\npublic class DeleteCollection {\n    public static void main(String[] args) {\n        Chroma chroma = new Chroma(\"http://localhost:8000\", opt -> opt.debug(true));\n        Collection collection = chroma.getCollection(\"my_collection\");\n        collection.delete();\n        System.out.println(\"Collection deleted successfully\");\n    }\n}\n```\n\n---\n\n## 4. 添加和删除文档\n\n### 4.1 添加文档\n\n```java\nimport tech.smartboot.feat.ai.vector.Document;\nimport tech.smartboot.feat.ai.vector.VectorStore;\nimport tech.smartboot.feat.ai.vector.chroma.ChromaVectorStore;\nimport java.util.Collections;\n\npublic class AddDocument {\n    public static void main(String[] args) {\n        // 创建 ChromaVectorStore 实例\n        VectorStore vectorStore = ChromaVectorStore.chroma(opt -> {\n            opt.setUrl(\"http://localhost:8000\")\n               .collectionName(\"my_collection\")\n               .debug(true);\n        });\n\n        // 创建文档对象\n        Document document = new Document();\n        document.setId(\"1\");\n        document.setDocument(\"hello world\");  // 文本内容\n        document.setMetadata(Collections.singletonMap(\"name\", \"sndao\"));  // 元数据\n\n        // 添加文档到集合\n        vectorStore.add(Collections.singletonList(document));\n        System.out.println(\"Document added successfully\");\n    }\n}\n```\n\n### 4.2 删除文档\n\n```java\nimport tech.smartboot.feat.ai.vector.Document;\nimport tech.smartboot.feat.ai.vector.VectorStore;\nimport tech.smartboot.feat.ai.vector.chroma.ChromaVectorStore;\nimport java.util.Collections;\n\npublic class DeleteDocument {\n    public static void main(String[] args) {\n        // 创建 ChromaVectorStore 实例\n        VectorStore vectorStore = ChromaVectorStore.chroma(opt -> {\n            opt.setUrl(\"http://localhost:8000\")\n               .collectionName(\"my_collection\")\n               .debug(true);\n        });\n\n        // 删除文档\n        vectorStore.delete(\"1\");  // 删除 ID 为 \"1\" 的文档\n        System.out.println(\"Document deleted successfully\");\n    }\n}\n```\n\n---\n\n## 5. 查询和搜索\n\n### 5.1 基于内容的相似性搜索\n\n```java\nimport tech.smartboot.feat.ai.vector.SearchRequest;\nimport tech.smartboot.feat.ai.vector.VectorStore;\nimport tech.smartboot.feat.ai.vector.chroma.ChromaVectorStore;\nimport java.util.Collections;\n\npublic class SimilaritySearch {\n    public static void main(String[] args) {\n        // 创建 ChromaVectorStore 实例\n        VectorStore vectorStore = ChromaVectorStore.chroma(opt -> {\n            opt.setUrl(\"http://localhost:8000\")\n               .collectionName(\"my_collection\")\n               .debug(true);\n        });\n\n        // 创建搜索请求\n        SearchRequest request = new SearchRequest();\n        request.setQuery(\"hello\");  // 搜索文本\n        request.setTopK(3);         // 返回前 3 个结果\n\n        // 执行相似性搜索\n        List\u003CDocument> results = vectorStore.similaritySearch(request);\n        System.out.println(\"Search results: \" + results.size());\n    }\n}\n```\n\n### 5.2 基于元数据的过滤搜索\n\n```java\nimport tech.smartboot.feat.ai.vector.SearchRequest;\nimport tech.smartboot.feat.ai.vector.VectorStore;\nimport tech.smartboot.feat.ai.vector.chroma.ChromaVectorStore;\nimport tech.smartboot.feat.ai.vector.expression.Expression;\n\npublic class MetadataSearch {\n    public static void main(String[] args) {\n        // 创建 ChromaVectorStore 实例\n        VectorStore vectorStore = ChromaVectorStore.chroma(opt -> {\n            opt.setUrl(\"http://localhost:8000\")\n               .collectionName(\"my_collection\")\n               .debug(true);\n        });\n\n        // 创建过滤表达式\n        Expression filter = Expression.of(\"name\").eq(\"sndao\");\n\n        // 创建搜索请求\n        SearchRequest request = new SearchRequest();\n        request.setQuery(\"hello\");\n        request.setExpression(filter);\n\n        // 执行搜索\n        List\u003CDocument> results = vectorStore.similaritySearch(request);\n        System.out.println(\"Filtered search results: \" + results.size());\n    }\n}\n```\n\n---\n\n## 6. 总结\n\n通过本教程，你已经掌握了在 Feat 中使用 Chroma 进行向量数据管理的基本方法，包括：\n\n- Chroma 服务的安装与配置\n- 数据库和集合的创建与管理\n- 文档的添加与删除\n- 基于内容和元数据的搜索\n\nChroma 的强大功能使其成为处理高维向量数据的理想选择。希望本教程能帮助你快速上手，并在实际项目中发挥其优势。","src/content/docs/ai/chroma.mdx","190d686a58597389"]